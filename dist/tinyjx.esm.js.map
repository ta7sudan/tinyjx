{"version":3,"file":"tinyjx.esm.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\ndeclare const DEBUG: boolean;\n\nexport interface Abortable {\n\tabort: () => void;\n}\n\nexport interface SerializeOptions {\n\tdata: any;\n\tmethod: HTTPMethod;\n\tcontentType?: string;\n\turl: string;\n\tcache: boolean;\n}\n\nexport interface SerializeResult {\n\turl: string;\n\tdata: any;\n}\n\nexport interface DeserializeOptions {\n\tdata: any;\n\tcontentType: string | null | undefined;\n\tacceptType: string;\n}\n\nexport interface ConfigOptions {\n\tpool?: number | boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n}\n\nexport interface NoBodyMethodOptions {\n\tcontentType?: string;\n\tbeforeSend?(xhr: CustomXMLHttpRequest, options: AjaxOptions): boolean | void;\n\tcomplete?(xhr: XMLHttpRequest, status: string): any;\n\tdataType?: string;\n\t// 不允许取得_active和requestURL, 所以用XMLHttpRequest而不是CustomXMLHttpRequest\n\trecoverableError?(err: Error, resData: any, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\tunrecoverableError?(err: Error, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\theaders?: Record<string, string>;\n\tmimeType?: keyof MIMEType;\n\tusername?: string;\n\tpassword?: string;\n\tsuccess?(resData: any, xhr: XMLHttpRequest, event: Event): any;\n\tevents?: XhrEventsObj;\n\tuploadEvents?: XhrEventsObj;\n\tcache?: boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n\tresponseType?: XMLHttpRequestResponseType;\n\ttimeout?: number;\n\tontimeout?(event: ProgressEvent): any;\n\twithCredentials?: boolean;\n}\n\nexport interface BodyMethodOptions extends NoBodyMethodOptions {\n\tdata?: any;\n}\n\nexport interface AjaxOptions extends BodyMethodOptions {\n\turl?: string;\n\tmethod?: HTTPMethod;\n}\n\ninterface CustomXMLHttpRequest extends XMLHttpRequest {\n\t_id: number;\n\t_active: boolean;\n\trequestURL: string;\n}\n\ntype PredefinedContentType = 'json' | 'form' | 'html' | 'xml' | 'text';\n\nexport type MIMEType = Record<PredefinedContentType, string>;\n\nexport interface JsonpOptions {\n\turl: string;\n\tcache?: boolean;\n\tcrossorigin?: string;\n\tcallbackName?: string;\n\t// success不关心返回值就没必要去约束为void\n\tsuccess?(data?: any): any;\n\t// beforeSend关心返回值是否是布尔值, 那就还是约束下\n\tbeforeSend?(url: string, options: JsonpOptions): boolean | void;\n\tcomplete?(status: string): any;\n\terror?(err: Error, event: string | UIEvent | Event): any;\n}\n\ntype XhrEvents =\n\t| 'onloadstart'\n\t| 'onprogress'\n\t| 'onabort'\n\t| 'onerror'\n\t| 'onload'\n\t| 'ontimeout'\n\t| 'onloadend'\n\t| 'onreadystatechange';\n\ntype ResponseCategory = 'responseXML' | 'response' | 'responseText';\n\ntype Callable = (...args: Array<any>) => any;\n\nexport type HTTPMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'HEAD'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'get'\n\t| 'post'\n\t| 'head'\n\t| 'put'\n\t| 'patch'\n\t| 'delete'\n\t| 'options';\n\nexport type Serialize = (options: SerializeOptions) => SerializeResult;\n\nexport type Deserialize = (options: DeserializeOptions) => any;\n\nexport type XhrEventsObj = Record<XhrEvents, Callable>;\n\nconst isFn = (fn: any): fn is Callable => typeof fn === 'function';\n\nconst isJSON = (cType: string): boolean => /application\\/json/i.test(cType);\n\nconst isForm = (cType: string): boolean => /application\\/x-www-form-urlencoded/i.test(cType);\n\nconst isNoEmptyStr = (v: any): v is string => v && typeof v === 'string';\n\nconst isStrOrStrListRecord = (o: any): o is Record<string, string | Array<string>> =>\n\tObject.prototype.toString.call(o) === '[object Object]';\n\nconst lc = window.location;\n\nconst xhrPool: Array<CustomXMLHttpRequest> = [],\n\t// tslint:disable-next-line\n\tArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor,\n\t// 为什么这里不用字符串枚举?\n\t// 因为枚举的反查带来不必要的开销, 而const枚举\n\t// 又会在编译时内联, 不能使用key索引查找值,\n\t// 另一方面又希望有一些类型检查, 所以折中这样\n\tMIME: MIMEType = {\n\t\tjson: 'application/json',\n\t\tform: 'application/x-www-form-urlencoded',\n\t\thtml: 'text/html',\n\t\txml: 'application/xml',\n\t\ttext: 'text/plain'\n\t},\n\tevents: Array<XhrEvents> = [\n\t\t'onloadstart',\n\t\t'onprogress',\n\t\t'onabort',\n\t\t'onerror',\n\t\t'onload',\n\t\t'ontimeout',\n\t\t'onloadend',\n\t\t'onreadystatechange'\n\t];\n\nlet jsonpId = Date.now(),\n\tcacheRand = Date.now() + 5,\n\tglobalSerialize: Callable | null = null,\n\tglobalDeserialize: Callable | null = null;\n\nif (DEBUG) {\n\tvar xhrId = 0;\n}\n\nfunction createXhr(): CustomXMLHttpRequest {\n\t// 不用class继承, 省得编译出来多一个函数\n\tconst xhr: CustomXMLHttpRequest = new XMLHttpRequest() as CustomXMLHttpRequest;\n\tObject.defineProperty(xhr, '_active', {\n\t\tvalue: false,\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tObject.defineProperty(xhr, 'requestURL', {\n\t\tvalue: '',\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tif (DEBUG) {\n\t\tObject.defineProperty(xhr, '_id', {\n\t\t\tvalue: ++xhrId,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\treturn xhr;\n}\n\nfunction resetXhr(xhr: CustomXMLHttpRequest): void {\n\t// responseType, withCredentials以及header相关的会在open后重置\n\txhr._active = false;\n\t// 可能是同步请求那就不能设置timeout\n\ttry {\n\t\txhr.timeout = 0;\n\t\txhr.requestURL = '';\n\t\t// tslint:disable-next-line\n\t} catch (e) {}\n\tevents.forEach((v: XhrEvents) => (xhr[v] = null));\n\t// 这里不建议给XMLHttpRequestUpload patch一个索引类型, 可能影响到其他地方\n\txhr.upload && events.forEach((v: XhrEvents) => ((xhr.upload as any)[v] = null));\n}\n\nfunction xhrFactory(): CustomXMLHttpRequest {\n\tfor (let i = 0, len = xhrPool.length; i < len; ++i) {\n\t\tif (!xhrPool[i]._active) {\n\t\t\treturn xhrPool[i];\n\t\t}\n\t}\n\treturn createXhr();\n}\n\nfunction querystring(obj: Record<string, string | Array<string>>): string {\n\tif (isStrOrStrListRecord(obj)) {\n\t\treturn Object.keys(obj)\n\t\t\t.map((k: string) => {\n\t\t\t\tconst value = obj[k];\n\t\t\t\treturn Array.isArray(value)\n\t\t\t\t\t? value.map((v: string) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')\n\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(value)}`;\n\t\t\t})\n\t\t\t.join('&');\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n}\n\nconst defaultSerialize: Serialize = ({\n\tdata,\n\tmethod,\n\tcontentType = MIME.json,\n\turl,\n\tcache\n}: SerializeOptions): SerializeResult => {\n\tif (!cache) {\n\t\t// 字符串不可变, 所以这里懒得起名了, 赋值url其实不影响外部\n\t\t// tslint:disable-next-line\n\t\turl += ~url.indexOf('?') ? `&_=${++cacheRand}` : `?_=${++cacheRand}`;\n\t}\n\tif (method === 'GET' || method === 'HEAD') {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (\n\t\tdata instanceof Document ||\n\t\t// URLSearchParams和ReadableStream暂时不考虑支持了, 浏览器版本要求比较高\n\t\t// data instanceof URLSearchParams ||\n\t\t// data instanceof ReadableStream ||\n\t\tdata instanceof Blob ||\n\t\tdata instanceof FormData ||\n\t\tdata instanceof ArrayBuffer ||\n\t\tdata instanceof ArrayBufferView ||\n\t\ttypeof data === 'string'\n\t) {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tlet resultData = null;\n\tif (isJSON(contentType)) {\n\t\tresultData = JSON.stringify(data);\n\t} else if (isForm(contentType)) {\n\t\tresultData = querystring(data);\n\t} else {\n\t\tthrow new TypeError(\n\t\t\t'Unknown data type, you can provide a custom serialize function in options to override the default.'\n\t\t);\n\t}\n\treturn {\n\t\turl,\n\t\tdata: resultData\n\t};\n};\n\nconst defaultDeserialize: Deserialize = ({\n\tdata,\n\tcontentType,\n\tacceptType\n}: DeserializeOptions): any => {\n\tlet rst = null;\n\tif (\n\t\tisNoEmptyStr(data) &&\n\t\t((isNoEmptyStr(contentType) && isJSON(contentType)) || isJSON(acceptType))\n\t) {\n\t\ttry {\n\t\t\trst = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\tconsole.error('Invalid json string');\n\t\t\trst = data;\n\t\t}\n\t} else {\n\t\trst = data;\n\t}\n\treturn rst;\n};\n\nfunction setHeaders(xhr: CustomXMLHttpRequest, headers: Record<string, string>): void {\n\tObject.keys(headers).forEach((k: string) => xhr.setRequestHeader(k, headers[k]));\n}\n\nfunction setEvents(target: CustomXMLHttpRequest | XMLHttpRequestUpload, evts?: XhrEventsObj): void {\n\tif (isStrOrStrListRecord(evts) && target) {\n\t\t// 不用addEventListener是它不方便reset\n\t\tObject.keys(evts)\n\t\t\t.filter((k: string): k is XhrEvents => events.includes(k as XhrEvents))\n\t\t\t.forEach((k: XhrEvents) => ((target as XhrEventsObj)[k] = evts[k]));\n\t}\n}\n\nfunction jsonp(opts: JsonpOptions): void {\n\tlet {\n\t\turl,\n\t\t/* tslint:disable */\n\t\tcache = false,\n\t\tcrossorigin,\n\t\tcallbackName,\n\t\tsuccess,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tconst hasOriginalCb = callbackName && isFn((window as any)[callbackName]);\n\tif (isNoEmptyStr(callbackName) && !hasOriginalCb) {\n\t\tthrow new Error(`${callbackName} is not a function.`);\n\t}\n\n\tconst hasSuccessCb = isFn(success),\n\t\thasErrorCb = isFn(error),\n\t\thasCompleteCb = isFn(complete),\n\t\t// hasOriginalCb为true的话, callbackName肯定不为空, 前面已经判断过了, 这里把空值去除\n\t\toriginalCb = hasOriginalCb ? (window as any)[callbackName!] : undefined;\n\n\tif (!hasSuccessCb && !hasCompleteCb && !hasOriginalCb) {\n\t\tthrow new Error('Must set a success callback or complete callback.');\n\t}\n\tif (!isNoEmptyStr(url)) {\n\t\tthrow new TypeError(`url expected a non empty string, but received ${JSON.stringify(url)}.`);\n\t}\n\n\tconst hasCustomCbName = isNoEmptyStr(callbackName),\n\t\t// hasCustomCbName为true的话, callbackName肯定为非空字符串, 这里去掉空值\n\t\tcbName = hasCustomCbName ? callbackName! : `jsonp${++jsonpId}`,\n\t\tscript = document.createElement('script');\n\n\tif (url.split('?').length < 3) {\n\t\t// 没有占位符的话默认callback\n\t\tconst qs = `callback=${encodeURIComponent(cbName)}`;\n\t\turl = ~url.indexOf('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t} else {\n\t\turl = url.replace(/\\?(.+)=\\?/, `?$1=${encodeURIComponent(cbName)}`);\n\t}\n\t!cache && (url += `&_=${++cacheRand}`);\n\n\tconst w = window as any;\n\tif (!w[cbName] || !w[cbName].hasHook) {\n\t\tw[cbName] = function (...args: Array<any>): void {\n\t\t\t// 放前面, 防止后面的callback抛异常导致删不掉\n\t\t\tif (!hasCustomCbName) {\n\t\t\t\tdelete w[cbName];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (hasOriginalCb) {\n\t\t\t\t\toriginalCb(...args);\n\t\t\t\t} else if (hasSuccessCb) {\n\t\t\t\t\t// 这里hasSuccessCb已经是类型保护isFn的结果了, 但是需要直接调用isFn\n\t\t\t\t\t// 才能获得类型保护, 为了减少函数调用, 就暂存了类型保护的结果为hasSuccessCb\n\t\t\t\t\t// 所以这里success也应当是不为空的, 去掉空值, 但是是用!去除还是用as\n\t\t\t\t\t// 应该是都可以, 但是这里来讲应该是!好一点, 因为这里success用as那就是Callble,\n\t\t\t\t\t// 用!那就是JsonpOptions中定义的类型, Callble更关心success是否可以作为函数调用,\n\t\t\t\t\t// 而JsonpOptions中的定义更关心具体参数的类型和个数, 这里我们更关心参数类型,\n\t\t\t\t\t// 所以用!去除空值\n\t\t\t\t\tsuccess!(...args);\n\t\t\t\t}\n\t\t\t\thasCompleteCb && complete!('success');\n\t\t\t\t// 同样, hasOriginalCb为true则callbackName不可能空, 去除空值\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t} catch (e) {\n\t\t\t\t// 个人觉得应该crash掉让用户修复异常而不是继续执行complete\n\t\t\t\t// 所以这里只是为了还原window上原有的函数而不是为了吞掉异常\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\tw[cbName].hasHook = true;\n\t}\n\n\tscript.onerror = function (e: string | Event): void {\n\t\tdocument.body.removeChild(script);\n\t\tif (!hasCustomCbName) {\n\t\t\tdelete w[cbName];\n\t\t}\n\t\t// 都没有的话就继续抛出异常, 方便异常监控系统捕获\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`Load script ${url} failed.`);\n\t\t}\n\t\thasErrorCb && error!(new Error(`Load script ${url} failed.`), e);\n\t\thasCompleteCb && complete!('error');\n\t};\n\n\tscript.onload = (): ReturnType<typeof setTimeout> =>\n\t\tsetTimeout(() => document.body.removeChild(script), 3000);\n\n\tcrossorigin && (script.crossOrigin = crossorigin);\n\tscript.src = url;\n\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\t// 允许拦截掉不发送请求\n\t\t\tconst rst = beforeSend!(url, opts);\n\t\t\trst !== false && document.body.appendChild(script);\n\t\t});\n\t} else {\n\t\tdocument.body.appendChild(script);\n\t}\n}\n\nfunction getResponse(xhr: CustomXMLHttpRequest, key: ResponseCategory): any {\n\t// 在有responseType的情况下, 访问responseXML, responseText等都有可能抛出异常\n\ttry {\n\t\treturn xhr[key];\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\nfunction ajax(opts: AjaxOptions): Abortable {\n\tlet {\n\t\turl = lc.href,\n\t\tmethod = 'GET' as HTTPMethod,\n\t\tcontentType: reqCtype,\n\t\tdataType: acceptType = 'json',\n\t\t/* tslint:disable */\n\t\tdata: reqRawData,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\trecoverableError,\n\t\tunrecoverableError,\n\t\theaders,\n\t\tmimeType,\n\t\tresponseType = '' as XMLHttpRequestResponseType,\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\ttimeout = 0,\n\t\tontimeout,\n\t\tevents,\n\t\tuploadEvents,\n\t\twithCredentials = false,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tmethod = method.toUpperCase().trim() as HTTPMethod;\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isNoEmptyStr(reqCtype)) {\n\t\tMIME[reqCtype as PredefinedContentType] && (reqCtype = MIME[reqCtype as PredefinedContentType]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\tmaybeProtocol = /^([\\w-]+:)\\/\\//.exec(url),\n\t\threfProtocol = /^(https?):\\/\\//.exec(lc.href),\n\t\tprotocol = maybeProtocol ? maybeProtocol[1] : hrefProtocol ? hrefProtocol[1] : null,\n\t\txhr = xhrFactory(),\n\t\thasCompleteCb = isFn(complete),\n\t\thasRecoverableErrorCb = isFn(recoverableError),\n\t\thasUnrecoverableErrorCb = isFn(unrecoverableError),\n\t\thasSuccessCb = isFn(success);\n\n\tlet reqData: any,\n\t\terrCalled = false,\n\t\tcompleteCalled = false;\n\t// 这里不用捕获异常去重置xhr是因为xhr还没激活\n\t({url, data: reqData} = slz({data: reqRawData, method, contentType: reqCtype, url, cache}));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, true, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isNoEmptyStr(reqData)) {\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isNoEmptyStr(acceptType)) {\n\t\t(MIME as any)[acceptType] && (acceptType = MIME[acceptType as keyof MIMEType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\n\tif (isStrOrStrListRecord(headers)) {\n\t\tsetHeaders(xhr, headers);\n\t}\n\n\tisNoEmptyStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\twithCredentials && (xhr.withCredentials = withCredentials);\n\tresponseType && (xhr.responseType = responseType);\n\ttimeout && (xhr.timeout = timeout);\n\tif (isFn(ontimeout)) {\n\t\txhr.ontimeout = function (e: ProgressEvent): void {\n\t\t\tontimeout!(e);\n\t\t\thasCompleteCb && complete!(this, 'timeout');\n\t\t};\n\t} else if (timeout && !isFn(xhr.ontimeout)) {\n\t\txhr.ontimeout = function (): void {\n\t\t\tif (hasCompleteCb) {\n\t\t\t\tcomplete!(this, 'timeout');\n\t\t\t} else {\n\t\t\t\t// 如果没监听ontimeout但是设置了timeout, window.onerror不会捕获这个错误, 所以手动抛个\n\t\t\t\tthrow new Error(`Request ${(this as CustomXMLHttpRequest).requestURL} timeout.`);\n\t\t\t}\n\t\t};\n\t}\n\n\t// loadend无论同步还是异步请求, 无论前面的事件是否抛异常, 它都会执行\n\tif (isFn(xhr.onloadend)) {\n\t\tconst originalLoadend = xhr.onloadend;\n\t\txhr.onloadend = function (e: ProgressEvent): void {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t\toriginalLoadend.call(this, e);\n\t\t};\n\t} else {\n\t\txhr.onloadend = function (): void {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t};\n\t}\n\t// 覆盖掉用户自定义onreadystatechange\n\txhr.onreadystatechange = function (e: Event): void {\n\t\tif (this.readyState === 4) {\n\t\t\tconst resCtype = this.getResponseHeader('Content-Type');\n\t\t\t// 这里也不用捕获异常, 因为xhr.onloadend会在之后帮我们回收xhr\n\t\t\tconst resData = dslz({\n\t\t\t\tdata:\n\t\t\t\t\tgetResponse(xhr, 'responseXML') ||\n\t\t\t\t\tgetResponse(xhr, 'response') ||\n\t\t\t\t\tgetResponse(xhr, 'responseText'),\n\t\t\t\tcontentType: resCtype,\n\t\t\t\tacceptType\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\t(this.status >= 200 && this.status < 300) ||\n\t\t\t\tthis.status === 304 ||\n\t\t\t\t(this.status === 0 && protocol === 'file:')\n\t\t\t) {\n\t\t\t\t// 异常直接抛\n\t\t\t\thasSuccessCb && success!(resData, this, e);\n\t\t\t\thasCompleteCb && complete!(this, 'success');\n\t\t\t} else if (this.status !== 0) {\n\t\t\t\t// 这类错误xhr.onerror和window.onerror都不捕获所以手动抛一个\n\t\t\t\tif (!hasRecoverableErrorCb && !hasCompleteCb) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Remote server error. Request URL: ${\n\t\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t\t}, Status code: ${this.status}, message: ${this.statusText}, response: ${\n\t\t\t\t\t\t\tthis.responseText\n\t\t\t\t\t\t}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// 理论上来讲好像没必要再注册xhr.onerror了, 因为如果有error那status必然为0\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\t\t\t\t// 但是不加个心里不踏实...总感觉会不会有浏览器没按规范实现\n\t\t\t\t// 不过知名的库页都没监听onerror, 那说明应该是都按规范实现了的\n\t\t\t\t// 但是我要加!!!\n\t\t\t\tif (hasRecoverableErrorCb) {\n\t\t\t\t\terrCalled = true;\n\t\t\t\t\trecoverableError!(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Remote server error. Request URL: ${\n\t\t\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t\t\t}, Status code: ${this.status}, message: ${this.statusText}, response: ${\n\t\t\t\t\t\t\t\tthis.responseText\n\t\t\t\t\t\t\t}.`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tresData,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\te\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (hasCompleteCb) {\n\t\t\t\t\tcompleteCalled = true;\n\t\t\t\t\tcomplete!(this, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 覆盖\n\txhr.onerror = function (e: ProgressEvent): void {\n\t\t// 跨域错误会在这里捕获, 但是window.onerror不捕获, 所以也手动抛一个\n\t\tif (!hasUnrecoverableErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(\n\t\t\t\t`An error occurred, maybe crossorigin error. Request URL: ${\n\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t}, Status code: ${this.status}.`\n\t\t\t);\n\t\t}\n\t\tif (!errCalled && hasUnrecoverableErrorCb) {\n\t\t\tunrecoverableError!(\n\t\t\t\tnew Error(\n\t\t\t\t\t`Network error or browser restricted. Request URL: ${\n\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t}, Status code: ${this.status}`\n\t\t\t\t),\n\t\t\t\tthis,\n\t\t\t\te\n\t\t\t);\n\t\t}\n\t\tif (!completeCalled && hasCompleteCb) {\n\t\t\tcomplete!(this, 'error');\n\t\t}\n\t};\n\n\t// 哎...都异步吧\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\tlet rst;\n\t\t\ttry {\n\t\t\t\trst = beforeSend!(xhr, opts);\n\t\t\t} catch (e) {\n\t\t\t\t// 恶心之处就在于每个用户定义的callback都可能触发异常, 然而我还要回收xhr\n\t\t\t\tresetXhr(xhr);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tif (rst !== false) {\n\t\t\t\txhr.send(reqData || null);\n\t\t\t} else {\n\t\t\t\tresetXhr(xhr);\n\t\t\t}\n\t\t});\n\t} else {\n\t\txhr.send(reqData || null);\n\t}\n\t// 不暴露xhr\n\treturn {\n\t\tabort(): void {\n\t\t\txhr.abort();\n\t\t}\n\t};\n}\n\nexport function config({pool = false, serialize, deserialize}: ConfigOptions = {}): void {\n\tif (pool) {\n\t\txhrPool.length = 0;\n\t\tlet poolSize = typeof pool === 'number' ? pool : 5;\n\t\tif (poolSize < 0) {\n\t\t\tthrow new Error('pool size must >= 0');\n\t\t}\n\t\twhile (poolSize--) {\n\t\t\txhrPool.push(createXhr());\n\t\t}\n\t}\n\tisFn(serialize) && (globalSerialize = serialize);\n\tisFn(deserialize) && (globalDeserialize = deserialize);\n}\n\nexport {ajax, jsonp};\n\nexport function get(url: string, opts: NoBodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function head(url: string, opts: NoBodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'HEAD'\n\t});\n}\n\nexport function post(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n}\n\nexport function put(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n}\n\nexport function del(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n}\n\nexport function patch(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PATCH'\n\t});\n}\n\nexport function options(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'OPTIONS'\n\t});\n}\n"],"names":["isFn","fn","isJSON","cType","test","isForm","isNoEmptyStr","v","isStrOrStrListRecord","o","Object","prototype","toString","call","lc","window","location","xhrPool","ArrayBufferView","getPrototypeOf","Uint8Array","constructor","MIME","json","form","html","xml","text","events","jsonpId","Date","now","cacheRand","globalSerialize","globalDeserialize","createXhr","xhr","XMLHttpRequest","defineProperty","value","writable","enumerable","resetXhr","_active","timeout","requestURL","e","forEach","upload","xhrFactory","i","len","length","querystring","obj","keys","map","k","Array","isArray","encodeURIComponent","join","JSON","stringify","defaultSerialize","data","method","contentType","url","cache","indexOf","Document","Blob","FormData","ArrayBuffer","resultData","TypeError","defaultDeserialize","acceptType","rst","parse","console","error","setHeaders","headers","setRequestHeader","setEvents","target","evts","filter","includes","jsonp","opts","crossorigin","callbackName","success","beforeSend","complete","hasOriginalCb","Error","hasSuccessCb","hasErrorCb","hasCompleteCb","originalCb","undefined","hasCustomCbName","cbName","script","document","createElement","split","qs","replace","w","hasHook","args","onerror","body","removeChild","onload","setTimeout","crossOrigin","src","appendChild","getResponse","key","ajax","href","reqCtype","dataType","reqRawData","recoverableError","unrecoverableError","mimeType","responseType","username","password","ontimeout","uploadEvents","withCredentials","serialize","deserialize","toUpperCase","trim","slz","dslz","maybeProtocol","exec","hrefProtocol","protocol","hasRecoverableErrorCb","hasUnrecoverableErrorCb","reqData","errCalled","completeCalled","open","overrideMimeType","onloadend","originalLoadend","onreadystatechange","readyState","resCtype","getResponseHeader","resData","status","statusText","responseText","send","abort","config","pool","poolSize","push","get","head","post","put","del","patch","options"],"mappings":"AA4HA,MAAMA,IAAI,GAAIC,EAAD,IAA6B,OAAOA,EAAP,KAAc,UAAxD;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAA4B,qBAAqBC,IAArB,CAA0BD,KAA1B,CAA3C;;AAEA,MAAME,MAAM,GAAIF,KAAD,IAA4B,sCAAsCC,IAAtC,CAA2CD,KAA3C,CAA3C;;AAEA,MAAMG,YAAY,GAAIC,CAAD,IAAyBA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAhE;;AAEA,MAAMC,oBAAoB,GAAIC,CAAD,IAC5BC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBADvC;;AAGA,MAAMK,EAAE,GAAGC,MAAM,CAACC,QAAlB;AAEA,MAAMC,OAAO,GAAgC,EAA7C;;AAECC,eAAe,GAAGR,MAAM,CAACS,cAAP,CAAsBT,MAAM,CAACS,cAAP,CAAsB,IAAIC,UAAJ,EAAtB,CAAtB,EAA+DC,WAFlF;;;;;AAOCC,IAAI,GAAa;EAChBC,IAAI,EAAE,kBADU;EAEhBC,IAAI,EAAE,mCAFU;EAGhBC,IAAI,EAAE,WAHU;EAIhBC,GAAG,EAAE,iBAJW;EAKhBC,IAAI,EAAE;CAZR;MAcCC,MAAM,GAAqB,CAC1B,aAD0B,EAE1B,YAF0B,EAG1B,SAH0B,EAI1B,SAJ0B,EAK1B,QAL0B,EAM1B,WAN0B,EAO1B,WAP0B,EAQ1B,oBAR0B,CAd5B;AAyBA,IAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,EAAd;IACCC,SAAS,GAAGF,IAAI,CAACC,GAAL,KAAa,CAD1B;IAECE,eAAe,GAAoB,IAFpC;IAGCC,iBAAiB,GAAoB,IAHtC;;AASA,SAASC,SAAT;;QAEOC,GAAG,GAAyB,IAAIC,cAAJ,EAAlC;EACA3B,MAAM,CAAC4B,cAAP,CAAsBF,GAAtB,EAA2B,SAA3B,EAAsC;IACrCG,KAAK,EAAE,KAD8B;IAErCC,QAAQ,EAAE,IAF2B;IAGrCC,UAAU,EAAE;GAHb;EAKA/B,MAAM,CAAC4B,cAAP,CAAsBF,GAAtB,EAA2B,YAA3B,EAAyC;IACxCG,KAAK,EAAE,EADiC;IAExCC,QAAQ,EAAE,IAF8B;IAGxCC,UAAU,EAAE;GAHb;;SAYOL,GAAP;;;AAGD,SAASM,QAAT,CAAkBN,GAAlB;;EAECA,GAAG,CAACO,OAAJ,GAAc,KAAd;;MAEI;IACHP,GAAG,CAACQ,OAAJ,GAAc,CAAd;IACAR,GAAG,CAACS,UAAJ,GAAiB,EAAjB,CAFG;GAAJ,CAIE,OAAOC,CAAP,EAAU;;EACZlB,MAAM,CAACmB,OAAP,CAAgBxC,CAAD,IAAmB6B,GAAG,CAAC7B,CAAD,CAAH,GAAS,IAA3C;;EAEA6B,GAAG,CAACY,MAAJ,IAAcpB,MAAM,CAACmB,OAAP,CAAgBxC,CAAD,IAAoB6B,GAAG,CAACY,MAAJ,CAAmBzC,CAAnB,IAAwB,IAA3D,CAAd;;;AAGD,SAAS0C,UAAT;OACM,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGlC,OAAO,CAACmC,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+C,EAAED,CAAjD,EAAoD;QAC/C,CAACjC,OAAO,CAACiC,CAAD,CAAP,CAAWP,OAAhB,EAAyB;aACjB1B,OAAO,CAACiC,CAAD,CAAd;;;;SAGKf,SAAS,EAAhB;;;AAGD,SAASkB,WAAT,CAAqBC,GAArB;MACK9C,oBAAoB,CAAC8C,GAAD,CAAxB,EAA+B;WACvB5C,MAAM,CAAC6C,IAAP,CAAYD,GAAZ,EACLE,GADK,CACAC,CAAD;YACElB,KAAK,GAAGe,GAAG,CAACG,CAAD,CAAjB;aACOC,KAAK,CAACC,OAAN,CAAcpB,KAAd,IACJA,KAAK,CAACiB,GAAN,CAAWjD,CAAD,OAAkBqD,kBAAkB,CAACH,CAAD,KAAOG,kBAAkB,CAACrD,CAAD,GAAvE,EAA8EsD,IAA9E,CAAmF,GAAnF,CADI,MAEDD,kBAAkB,CAACH,CAAD,KAAOG,kBAAkB,CAACrB,KAAD,GAFjD;KAHK,EAOLsB,IAPK,CAOA,GAPA,CAAP;GADD,MASO;WACCC,IAAI,CAACC,SAAL,CAAeT,GAAf,CAAP;;;;AAIF,MAAMU,gBAAgB,GAAc,CAAC;EACpCC,IADoC;EAEpCC,MAFoC;EAGpCC,WAAW,GAAG7C,IAAI,CAACC,IAHiB;EAIpC6C,GAJoC;EAKpCC;CALmC;MAO/B,CAACA,KAAL,EAAY;;;IAGXD,GAAG,IAAI,CAACA,GAAG,CAACE,OAAJ,CAAY,GAAZ,CAAD,SAA0B,EAAEtC,WAA5B,SAAgD,EAAEA,WAAzD;;;MAEGkC,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,MAAnC,EAA2C;WACnC;MACNE,GADM;MAENH;KAFD;;;MAMAA,IAAI,YAAYM,QAAhB;;;EAIAN,IAAI,YAAYO,IAJhB,IAKAP,IAAI,YAAYQ,QALhB,IAMAR,IAAI,YAAYS,WANhB,IAOAT,IAAI,YAAY/C,eAPhB,IAQA,OAAO+C,IAAP,KAAgB,QATjB,EAUE;WACM;MACNG,GADM;MAENH;KAFD;;;MAKGU,UAAU,GAAG,IAAjB;;MACIzE,MAAM,CAACiE,WAAD,CAAV,EAAyB;IACxBQ,UAAU,GAAGb,IAAI,CAACC,SAAL,CAAeE,IAAf,CAAb;GADD,MAEO,IAAI5D,MAAM,CAAC8D,WAAD,CAAV,EAAyB;IAC/BQ,UAAU,GAAGtB,WAAW,CAACY,IAAD,CAAxB;GADM,MAEA;UACA,IAAIW,SAAJ,CACL,oGADK,CAAN;;;SAIM;IACNR,GADM;IAENH,IAAI,EAAEU;GAFP;CA5CD;;AAkDA,MAAME,kBAAkB,GAAgB,CAAC;EACxCZ,IADwC;EAExCE,WAFwC;EAGxCW;CAHuC;MAKnCC,GAAG,GAAG,IAAV;;MAECzE,YAAY,CAAC2D,IAAD,CAAZ,KACE3D,YAAY,CAAC6D,WAAD,CAAZ,IAA6BjE,MAAM,CAACiE,WAAD,CAApC,IAAsDjE,MAAM,CAAC4E,UAAD,CAD7D,CADD,EAGE;QACG;MACHC,GAAG,GAAGjB,IAAI,CAACkB,KAAL,CAAWf,IAAX,CAAN;KADD,CAEE,OAAOnB,CAAP,EAAU;MACXmC,OAAO,CAACC,KAAR,CAAc,qBAAd;MACAH,GAAG,GAAGd,IAAN;;GARF,MAUO;IACNc,GAAG,GAAGd,IAAN;;;SAEMc,GAAP;CAnBD;;AAsBA,SAASI,UAAT,CAAoB/C,GAApB,EAA+CgD,OAA/C;EACC1E,MAAM,CAAC6C,IAAP,CAAY6B,OAAZ,EAAqBrC,OAArB,CAA8BU,CAAD,IAAerB,GAAG,CAACiD,gBAAJ,CAAqB5B,CAArB,EAAwB2B,OAAO,CAAC3B,CAAD,CAA/B,CAA5C;;;AAGD,SAAS6B,SAAT,CAAmBC,MAAnB,EAAwEC,IAAxE;MACKhF,oBAAoB,CAACgF,IAAD,CAApB,IAA8BD,MAAlC,EAA0C;;IAEzC7E,MAAM,CAAC6C,IAAP,CAAYiC,IAAZ,EACEC,MADF,CACUhC,CAAD,IAA+B7B,MAAM,CAAC8D,OAAP,CAAgBjC,CAAhB,CAA/B,OADT,EAEEV,OAFF,CAEWU,CAAD,IAAoB8B,MAAuB,CAAC9B,CAAD,CAAvB,GAA6B+B,IAAI,CAAC/B,CAAD,CAF/D;;;;AAMF,SAASkC,KAAT,CAAeC,IAAf;MACK;IACHxB,GADG;;;IAGHC,KAAK,GAAG,KAHL;IAIHwB,WAJG;IAKHC,YALG;IAMHC,OANG;IAOHC,UAPG;IAQHC,QARG;IASHf;;;MAEGU,IAXJ;QAaMM,aAAa,GAAGJ,YAAY,IAAI9F,IAAI,CAAEe,MAAc,CAAC+E,YAAD,CAAhB,CAA1C;;MACIxF,YAAY,CAACwF,YAAD,CAAZ,IAA8B,CAACI,aAAnC,EAAkD;UAC3C,IAAIC,KAAJ,IAAaL,iCAAb,CAAN;;;QAGKM,YAAY,GAAGpG,IAAI,CAAC+F,OAAD,CAAzB;QACCM,UAAU,GAAGrG,IAAI,CAACkF,KAAD,CADlB;QAECoB,aAAa,GAAGtG,IAAI,CAACiG,QAAD,CAFrB;;EAICM,UAAU,GAAGL,aAAa,GAAInF,MAAc,CAAC+E,YAAD,CAAlB,GAAoCU,SAJ/D;;MAMI,CAACJ,YAAD,IAAiB,CAACE,aAAlB,IAAmC,CAACJ,aAAxC,EAAuD;UAChD,IAAIC,KAAJ,CAAU,mDAAV,CAAN;;;MAEG,CAAC7F,YAAY,CAAC8D,GAAD,CAAjB,EAAwB;UACjB,IAAIQ,SAAJ,kDAA+Dd,IAAI,CAACC,SAAL,CAAeK,GAAf,IAA/D,CAAN;;;QAGKqC,eAAe,GAAGnG,YAAY,CAACwF,YAAD,CAApC;;EAECY,MAAM,GAAGD,eAAe,GAAGX,YAAH,WAA2B,EAAEjE,SAFtD;QAGC8E,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAHV;;MAKIzC,GAAG,CAAC0C,KAAJ,CAAU,GAAV,EAAe1D,MAAf,GAAwB,CAA5B,EAA+B;;UAExB2D,EAAE,eAAenD,kBAAkB,CAAC8C,MAAD,GAAzC;IACAtC,GAAG,GAAG,CAACA,GAAG,CAACE,OAAJ,CAAY,GAAZ,CAAD,MAAuBF,OAAO2C,IAA9B,MAAwC3C,OAAO2C,IAArD;GAHD,MAIO;IACN3C,GAAG,GAAGA,GAAG,CAAC4C,OAAJ,CAAY,WAAZ,SAAgCpD,kBAAkB,CAAC8C,MAAD,GAAlD,CAAN;;;GAEArC,KAAD,KAAWD,GAAG,UAAU,EAAEpC,WAA1B;QAEMiF,CAAC,GAAGlG,MAAV;;MACI,CAACkG,CAAC,CAACP,MAAD,CAAF,IAAc,CAACO,CAAC,CAACP,MAAD,CAAD,CAAUQ,OAA7B,EAAsC;IACrCD,CAAC,CAACP,MAAD,CAAD,GAAY,UAAU,GAAGS,IAAb;;UAEP,CAACV,eAAL,EAAsB;eACdQ,CAAC,CAACP,MAAD,CAAR;;;UAEG;YACCR,aAAJ,EAAmB;UAClBK,UAAU,CAAC,GAAGY,IAAJ,CAAV;SADD,MAEO,IAAIf,YAAJ,EAAkB;;;;;;;;UAQxBL,OAAQ,CAAC,GAAGoB,IAAJ,CAAR;;;QAEDb,aAAa,IAAIL,QAAS,CAAC,SAAD,CAA1B,CAbG;;QAeHC,aAAa,KAAKe,CAAC,CAACnB,YAAD,CAAD,GAAmBS,UAAxB,CAAb;OAfD,CAgBE,OAAOzD,CAAP,EAAU;;;QAGXoD,aAAa,KAAKe,CAAC,CAACnB,YAAD,CAAD,GAAmBS,UAAxB,CAAb;cACMzD,CAAN;;KAzBF;;IA4BAmE,CAAC,CAACP,MAAD,CAAD,CAAUQ,OAAV,GAAoB,IAApB;;;EAGDP,MAAM,CAACS,OAAP,GAAiB,UAAUtE,CAAV;IAChB8D,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BX,MAA1B;;QACI,CAACF,eAAL,EAAsB;aACdQ,CAAC,CAACP,MAAD,CAAR;;;;QAGG,CAACL,UAAD,IAAe,CAACC,aAApB,EAAmC;YAC5B,IAAIH,KAAJ,gBAAyB/B,aAAzB,CAAN;;;IAEDiC,UAAU,IAAInB,KAAM,CAAC,IAAIiB,KAAJ,gBAAyB/B,aAAzB,CAAD,EAA0CtB,CAA1C,CAApB;IACAwD,aAAa,IAAIL,QAAS,CAAC,OAAD,CAA1B;GAVD;;EAaAU,MAAM,CAACY,MAAP,GAAgB,MACfC,UAAU,CAAC,MAAMZ,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BX,MAA1B,CAAP,EAA0C,IAA1C,CADX;;EAGAd,WAAW,KAAKc,MAAM,CAACc,WAAP,GAAqB5B,WAA1B,CAAX;EACAc,MAAM,CAACe,GAAP,GAAatD,GAAb;;MAEIpE,IAAI,CAACgG,UAAD,CAAR,EAAsB;IACrBwB,UAAU,CAAC;;YAEJzC,GAAG,GAAGiB,UAAW,CAAC5B,GAAD,EAAMwB,IAAN,CAAvB;MACAb,GAAG,KAAK,KAAR,IAAiB6B,QAAQ,CAACS,IAAT,CAAcM,WAAd,CAA0BhB,MAA1B,CAAjB;KAHS,CAAV;GADD,MAMO;IACNC,QAAQ,CAACS,IAAT,CAAcM,WAAd,CAA0BhB,MAA1B;;;;AAIF,SAASiB,WAAT,CAAqBxF,GAArB,EAAgDyF,GAAhD;;MAEK;WACIzF,GAAG,CAACyF,GAAD,CAAV;GADD,CAEE,OAAO/E,CAAP,EAAU;WACJ,IAAP;;;;AAIF,SAASgF,IAAT,CAAclC,IAAd;MACK;IACHxB,GAAG,GAAGtD,EAAE,CAACiH,IADN;IAEH7D,MAAM,GAAG,KAFN;IAGHC,WAAW,EAAE6D,QAHV;IAIHC,QAAQ,EAAEnD,UAAU,GAAG,MAJpB;;;IAMHb,IAAI,EAAEiE,UANH;IAOHlC,UAPG;IAQHC,QARG;IASHkC,gBATG;IAUHC,kBAVG;IAWHhD,OAXG;IAYHiD,QAZG;IAaHC,YAAY,GAAG,EAbZ;IAcHC,QAdG;IAeHC,QAfG;IAgBHzC,OAhBG;IAiBHnD,OAAO,GAAG,CAjBP;IAkBH6F,SAlBG;IAmBH7G,MAnBG;IAoBH8G,YApBG;IAqBHC,eAAe,GAAG,KArBf;IAsBHtE,KAAK,GAAG,IAtBL;IAuBHuE,SAvBG;IAwBHC;;;MAEGjD,IA1BJ;EA4BA1B,MAAM,GAAGA,MAAM,CAAC4E,WAAP,GAAqBC,IAArB,EAAT;;;MAGI,EAAC,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,QAAhC,EAA0C,MAA1C,EAAkD,SAAlD,EAA6DrD,OAA7D,CAAsExB,MAAtE,CAAD,QAAJ,EAAoF;UAC7E,IAAIiC,KAAJ,yBAAkCjC,QAAlC,CAAN;;;;;MAKG5D,YAAY,CAAC0H,QAAD,CAAhB,EAA4B;IAC3B1G,IAAI,CAAC0G,QAAD,CAAJ,KAA4CA,QAAQ,GAAG1G,IAAI,CAAC0G,QAAD,CAA3D;GADD,MAEO,IAAIA,QAAJ,EAAc;UACd,IAAIpD,SAAJ,CACL,oFADK,CAAN;;;QAKKoE,GAAG,GAAGhJ,IAAI,CAAC4I,SAAD,CAAJ,GACRA,SADQ,GAER5I,IAAI,CAACiC,eAAD,CAAJ,GACCA,eADD,GAEC+B,gBAJL;QAKCiF,IAAI,GAAGjJ,IAAI,CAAC6I,WAAD,CAAJ,GACJA,WADI,GAEJ7I,IAAI,CAACkC,iBAAD,CAAJ,GACCA,iBADD,GAEC2C,kBATL;QAUCqE,aAAa,GAAG,iBAAiBC,IAAjB,CAAsB/E,GAAtB,CAVjB;QAWCgF,YAAY,GAAG,iBAAiBD,IAAjB,CAAsBrI,EAAE,CAACiH,IAAzB,CAXhB;QAYCsB,QAAQ,GAAGH,aAAa,GAAGA,aAAa,CAAC,CAAD,CAAhB,GAAsBE,YAAY,GAAGA,YAAY,CAAC,CAAD,CAAf,GAAqB,IAZhF;QAaChH,GAAG,GAAGa,UAAU,EAbjB;QAcCqD,aAAa,GAAGtG,IAAI,CAACiG,QAAD,CAdrB;QAeCqD,qBAAqB,GAAGtJ,IAAI,CAACmI,gBAAD,CAf7B;QAgBCoB,uBAAuB,GAAGvJ,IAAI,CAACoI,kBAAD,CAhB/B;QAiBChC,YAAY,GAAGpG,IAAI,CAAC+F,OAAD,CAjBpB;MAmBIyD,OAAJ;MACCC,SAAS,GAAG,KADb;MAECC,cAAc,GAAG,KAFlB;;GAIC;IAACtF,GAAD;IAAMH,IAAI,EAAEuF;MAAWR,GAAG,CAAC;IAAC/E,IAAI,EAAEiE,UAAP;IAAmBhE,MAAnB;IAA2BC,WAAW,EAAE6D,QAAxC;IAAkD5D,GAAlD;IAAuDC;GAAxD,CAA3B;;EAGAjC,GAAG,CAACO,OAAJ,GAAc,IAAd;EACAP,GAAG,CAACuH,IAAJ,CAASzF,MAAT,EAAiBE,GAAjB,EAAsB,IAAtB,EAA4BmE,QAA5B,EAAsCC,QAAtC;GACCpG,GAAG,CAACS,UAAL,KAAoBT,GAAG,CAACS,UAAJ,GAAiBuB,GAArC;;MAGI4D,QAAJ,EAAc;IACb5F,GAAG,CAACiD,gBAAJ,CAAqB,cAArB,EAAqC2C,QAArC;GADD,MAEO,IAAI1H,YAAY,CAACkJ,OAAD,CAAhB,EAA2B;;;IAGjCpH,GAAG,CAACiD,gBAAJ,CAAqB,cAArB,EAAqC/D,IAAI,CAACC,IAA1C;;;MAEGjB,YAAY,CAACwE,UAAD,CAAhB,EAA8B;IAC5BxD,IAAY,CAACwD,UAAD,CAAZ,KAA6BA,UAAU,GAAGxD,IAAI,CAACwD,UAAD,CAA9C;IACD1C,GAAG,CAACiD,gBAAJ,CAAqB,QAArB,EAA+BP,UAA/B;;;MAGGtE,oBAAoB,CAAC4E,OAAD,CAAxB,EAAmC;IAClCD,UAAU,CAAC/C,GAAD,EAAMgD,OAAN,CAAV;;;EAGD9E,YAAY,CAAC+H,QAAD,CAAZ,IAA0BjG,GAAG,CAACwH,gBAAJ,CAAqBvB,QAArB,CAA1B;;EAGA/C,SAAS,CAAClD,GAAD,EAAMR,MAAN,CAAT;EACA0D,SAAS,CAAClD,GAAG,CAACY,MAAL,EAAa0F,YAAb,CAAT;EAEAC,eAAe,KAAKvG,GAAG,CAACuG,eAAJ,GAAsBA,eAA3B,CAAf;EACAL,YAAY,KAAKlG,GAAG,CAACkG,YAAJ,GAAmBA,YAAxB,CAAZ;EACA1F,OAAO,KAAKR,GAAG,CAACQ,OAAJ,GAAcA,OAAnB,CAAP;;MACI5C,IAAI,CAACyI,SAAD,CAAR,EAAqB;IACpBrG,GAAG,CAACqG,SAAJ,GAAgB,UAAU3F,CAAV;MACf2F,SAAU,CAAC3F,CAAD,CAAV;MACAwD,aAAa,IAAIL,QAAS,CAAC,IAAD,EAAO,SAAP,CAA1B;KAFD;GADD,MAKO,IAAIrD,OAAO,IAAI,CAAC5C,IAAI,CAACoC,GAAG,CAACqG,SAAL,CAApB,EAAqC;IAC3CrG,GAAG,CAACqG,SAAJ,GAAgB;UACXnC,aAAJ,EAAmB;QAClBL,QAAS,CAAC,IAAD,EAAO,SAAP,CAAT;OADD,MAEO;;cAEA,IAAIE,KAAJ,YAAsB,KAA8BtD,qBAApD,CAAN;;KALF;;;;MAWG7C,IAAI,CAACoC,GAAG,CAACyH,SAAL,CAAR,EAAyB;UAClBC,eAAe,GAAG1H,GAAG,CAACyH,SAA5B;;IACAzH,GAAG,CAACyH,SAAJ,GAAgB,UAAU/G,CAAV;MACfJ,QAAQ,CAAC,IAAD,CAAR;MACAoH,eAAe,CAACjJ,IAAhB,CAAqB,IAArB,EAA2BiC,CAA3B;KAFD;GAFD,MAMO;IACNV,GAAG,CAACyH,SAAJ,GAAgB;MACfnH,QAAQ,CAAC,IAAD,CAAR;KADD;;;;EAKDN,GAAG,CAAC2H,kBAAJ,GAAyB,UAAUjH,CAAV;QACpB,KAAKkH,UAAL,KAAoB,CAAxB,EAA2B;YACpBC,QAAQ,GAAG,KAAKC,iBAAL,CAAuB,cAAvB,CAAjB,CAD0B;;YAGpBC,OAAO,GAAGlB,IAAI,CAAC;QACpBhF,IAAI,EACH2D,WAAW,CAACxF,GAAD,EAAM,aAAN,CAAX,IACAwF,WAAW,CAACxF,GAAD,EAAM,UAAN,CADX,IAEAwF,WAAW,CAACxF,GAAD,EAAM,cAAN,CAJQ;QAKpB+B,WAAW,EAAE8F,QALO;QAMpBnF;OANmB,CAApB;;UAUE,KAAKsF,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAArC,IACA,KAAKA,MAAL,KAAgB,GADhB,IAEC,KAAKA,MAAL,KAAgB,CAAhB,IAAqBf,QAAQ,KAAK,OAHpC,EAIE;;QAEDjD,YAAY,IAAIL,OAAQ,CAACoE,OAAD,EAAU,IAAV,EAAgBrH,CAAhB,CAAxB;QACAwD,aAAa,IAAIL,QAAS,CAAC,IAAD,EAAO,SAAP,CAA1B;OAPD,MAQO,IAAI,KAAKmE,MAAL,KAAgB,CAApB,EAAuB;;YAEzB,CAACd,qBAAD,IAA0B,CAAChD,aAA/B,EAA8C;gBACvC,IAAIH,KAAJ,sCAEH,KAA8BtD,4BACd,KAAKuH,oBAAoB,KAAKC,yBAC/C,KAAKC,eAJD,CAAN;SAH4B;;;;;;;YAgBzBhB,qBAAJ,EAA2B;UAC1BG,SAAS,GAAG,IAAZ;UACAtB,gBAAiB,CAChB,IAAIhC,KAAJ,sCAEG,KAA8BtD,4BACd,KAAKuH,oBAAoB,KAAKC,yBAC/C,KAAKC,eAJP,CADgB,EAQhBH,OARgB,EAShB,IATgB,EAUhBrH,CAVgB,CAAjB;;;YAaGwD,aAAJ,EAAmB;UAClBoD,cAAc,GAAG,IAAjB;UACAzD,QAAS,CAAC,IAAD,EAAO,OAAP,CAAT;;;;GAtDJ;;;EA6DA7D,GAAG,CAACgF,OAAJ,GAAc,UAAUtE,CAAV;;QAET,CAACyG,uBAAD,IAA4B,CAACjD,aAAjC,EAAgD;YACzC,IAAIH,KAAJ,6DAEH,KAA8BtD,4BACd,KAAKuH,SAHlB,CAAN;;;QAMG,CAACX,SAAD,IAAcF,uBAAlB,EAA2C;MAC1CnB,kBAAmB,CAClB,IAAIjC,KAAJ,sDAEG,KAA8BtD,4BACd,KAAKuH,QAHxB,CADkB,EAMlB,IANkB,EAOlBtH,CAPkB,CAAnB;;;QAUG,CAAC4G,cAAD,IAAmBpD,aAAvB,EAAsC;MACrCL,QAAS,CAAC,IAAD,EAAO,OAAP,CAAT;;GArBF;;;MA0BIjG,IAAI,CAACgG,UAAD,CAAR,EAAsB;IACrBwB,UAAU,CAAC;UACNzC,GAAJ;;UACI;QACHA,GAAG,GAAGiB,UAAW,CAAC5D,GAAD,EAAMwD,IAAN,CAAjB;OADD,CAEE,OAAO9C,CAAP,EAAU;;QAEXJ,QAAQ,CAACN,GAAD,CAAR;cACMU,CAAN;;;UAEGiC,GAAG,KAAK,KAAZ,EAAmB;QAClB3C,GAAG,CAACmI,IAAJ,CAASf,OAAO,IAAI,IAApB;OADD,MAEO;QACN9G,QAAQ,CAACN,GAAD,CAAR;;KAZQ,CAAV;GADD,MAgBO;IACNA,GAAG,CAACmI,IAAJ,CAASf,OAAO,IAAI,IAApB;;;;SAGM;IACNgB,KAAK;MACJpI,GAAG,CAACoI,KAAJ;;;GAFF;;;AAOD,SAAgBC,OAAO;EAACC,IAAI,GAAG,KAAR;EAAe9B,SAAf;EAA0BC;IAA8B;MAC1E6B,IAAJ,EAAU;IACTzJ,OAAO,CAACmC,MAAR,GAAiB,CAAjB;QACIuH,QAAQ,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,CAAjD;;QACIC,QAAQ,GAAG,CAAf,EAAkB;YACX,IAAIxE,KAAJ,CAAU,qBAAV,CAAN;;;WAEMwE,QAAQ,EAAf,EAAmB;MAClB1J,OAAO,CAAC2J,IAAR,CAAazI,SAAS,EAAtB;;;;EAGFnC,IAAI,CAAC4I,SAAD,CAAJ,KAAoB3G,eAAe,GAAG2G,SAAtC;EACA5I,IAAI,CAAC6I,WAAD,CAAJ,KAAsB3G,iBAAiB,GAAG2G,WAA1C;;AAGD,SAEgBgC,IAAIzG,KAAawB;SACzBkC,IAAI,mBACPlC;IACHxB;IACAF,MAAM,EAAE;IAHE,CAAX;;AAOD,SAAgB4G,KAAK1G,KAAawB;SAC1BkC,IAAI,mBACPlC;IACHxB;IACAF,MAAM,EAAE;IAHE,CAAX;;AAOD,SAAgB6G,KAAK3G,KAAaH,MAAW2B;SACrCkC,IAAI,mBACPlC;IACHxB;IACAH;IACAC,MAAM,EAAE;IAJE,CAAX;;AAQD,SAAgB8G,IAAI5G,KAAaH,MAAW2B;SACpCkC,IAAI,mBACPlC;IACHxB;IACAH;IACAC,MAAM,EAAE;IAJE,CAAX;;AAQD,SAAgB+G,IAAI7G,KAAaH,MAAW2B;SACpCkC,IAAI,mBACPlC;IACHxB;IACAH;IACAC,MAAM,EAAE;IAJE,CAAX;;AAQD,SAAgBgH,MAAM9G,KAAaH,MAAW2B;SACtCkC,IAAI,mBACPlC;IACHxB;IACAH;IACAC,MAAM,EAAE;IAJE,CAAX;;AAQD,SAAgBiH,QAAQ/G,KAAaH,MAAW2B;SACxCkC,IAAI,mBACPlC;IACHxB;IACAH;IACAC,MAAM,EAAE;IAJE,CAAX;;;;;"}