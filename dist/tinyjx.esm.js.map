{"version":3,"file":"tinyjx.esm.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\ndeclare const DEBUG: boolean;\n\ninterface SerializeOptions {\n\tdata: any;\n\tmethod: HTTPMethod;\n\tcontentType?: string;\n\turl: string;\n\tcache: boolean;\n}\ninterface SerializeResult {\n\turl: string;\n\tdata: any;\n}\ninterface DeserializeOptions {\n\tdata: any;\n\tcontentType: string | null | undefined;\n\tacceptType: string;\n}\n\ninterface ConfigOptions {\n\tpool?: number | boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n}\n\ninterface RequestOptions {\n\tcontentType?: string;\n\tbeforeSend?(xhr: CustomXMLHttpRequest, options: AsyncOptions): boolean | void;\n\tcomplete?(xhr: XMLHttpRequest, status: string): any;\n\tdataType?: string;\n\t// 不允许取得_active和requestURL, 所以用XMLHttpRequest而不是CustomXMLHttpRequest\n\terror?(err: Error, data: any, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\theaders?: KVObject;\n\tmimeType?: keyof MIMEType;\n\tusername?: string;\n\tpassword?: string;\n\tsuccess?(data: any, xhr: XMLHttpRequest, event: Event): any;\n\tevents?: XhrEventsObj;\n\tuploadEvents?: XhrEventsObj;\n\tcache?: boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n\tresponseType?: XMLHttpRequestResponseType;\n\ttimeout?: number;\n\tontimeout?(event: ProgressEvent): any;\n\twithCredentials?: boolean;\n}\n\ninterface BodyMethodOptions extends RequestOptions {\n\tdata?: any;\n}\n\ninterface AsyncOptions extends BodyMethodOptions {\n\turl?: string;\n\tmethod?: HTTPMethod;\n}\n\ninterface CustomXMLHttpRequest extends XMLHttpRequest {\n\t_id: number;\n\t_active: boolean;\n\t// 这个是后来加的, 实例化的时候不一定有\n\trequestURL?: string;\n}\n\ninterface MIMEType {\n\tjson: string;\n\tform: string;\n\thtml: string;\n\txml: string;\n\ttext: string;\n}\n\ninterface KVObject {\n\t[k: string]: any;\n}\n\ninterface JsonpOptions {\n\turl: string;\n\tcache?: boolean;\n\tcrossorigin?: string;\n\tcallbackName?: string;\n\t// success不关心返回值就没必要去约束为void\n\tsuccess?(data?: any): any;\n\t// beforeSend关心返回值是否是布尔值, 那就还是约束下\n\tbeforeSend?(url: string, options: JsonpOptions): boolean | void;\n\tcomplete?(status: string): any;\n\terror?(err: Error, event: string | UIEvent | Event): any;\n}\n\ntype XhrEvents = 'onloadstart' | 'onprogress' | 'onabort' | 'onerror' | 'onload' | 'ontimeout' | 'onloadend' | 'onreadystatechange';\n\ntype ResponseCategory = 'responseXML' | 'response' | 'responseText';\n\ntype Callable = (...args: Array<any>) => any;\n\ntype HTTPMethod = 'GET' | 'POST' | 'HEAD' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS';\n\ntype Serialize = (options: SerializeOptions) => SerializeResult;\n\ntype Deserialize = (options: DeserializeOptions) => any;\n\ntype XhrEventsObj = {\n\t[k in XhrEvents]: Callable\n};\n\nconst isFn = (fn: any): fn is Callable => typeof fn === 'function';\n\nconst isJSON = (cType: string): boolean => /application\\/json/i.test(cType);\n\nconst isForm = (cType: string): boolean => /application\\/x-www-form-urlencoded/i.test(cType);\n\nconst isStr = (v: any): v is string => v && typeof v === 'string';\n\nconst isObj = (o: any): o is KVObject => Object.prototype.toString.call(o) === '[object Object]';\n\nconst lc = window.location;\n\nconst xhrPool: Array<CustomXMLHttpRequest> = [],\n\t// tslint:disable-next-line\n\tArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor,\n\t// 为什么这里不用字符串枚举?\n\t// 因为枚举的反查带来不必要的开销, 而const枚举\n\t// 又会在编译时内联, 不能使用key索引查找值,\n\t// 另一方面又希望有一些类型检查, 所以折中这样\n\tMIME: MIMEType = {\n\t\tjson: 'application/json',\n\t\tform: 'application/x-www-form-urlencoded',\n\t\thtml: 'text/html',\n\t\txml: 'application/xml',\n\t\ttext: 'text/plain'\n\t},\n\tevents: Array<XhrEvents> = [\n\t\t'onloadstart',\n\t\t'onprogress',\n\t\t'onabort',\n\t\t'onerror',\n\t\t'onload',\n\t\t'ontimeout',\n\t\t'onloadend',\n\t\t'onreadystatechange'\n\t];\n\nlet jsonpId = Date.now(),\n\tcacheRand = Date.now() + 5,\n\tglobalSerialize: any = null,\n\tglobalDeserialize: any = null;\n\nif (DEBUG) {\n\tvar xhrId = 0;\n}\n\nfunction createXhr(): CustomXMLHttpRequest {\n\t// 不用class继承, 省得编译出来多一个函数\n\tconst xhr = new XMLHttpRequest();\n\tObject.defineProperty(xhr, '_active', {\n\t\tvalue: false,\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tif (DEBUG) {\n\t\tObject.defineProperty(xhr, '_id', {\n\t\t\tvalue: ++xhrId,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\treturn xhr as CustomXMLHttpRequest;\n}\n\nfunction resetXhr(xhr: CustomXMLHttpRequest) {\n\t// responseType, withCredentials以及header相关的会在open后重置\n\txhr._active = false;\n\t// 可能是同步请求那就不能设置timeout\n\ttry {\n\t\txhr.timeout = 0;\n\t\txhr.requestURL = '';\n\t// tslint:disable-next-line\n\t} catch (e) { }\n\tevents.forEach(v => (xhr[v] = null));\n\t// 这里不建议给XMLHttpRequestUpload patch一个索引类型, 可能影响到其他地方\n\txhr.upload && events.forEach(v => ((xhr.upload as any)[v] = null));\n}\n\nfunction xhrFactory(): CustomXMLHttpRequest {\n\tfor (let i = 0, len = xhrPool.length; i < len; ++i) {\n\t\tif (!xhrPool[i]._active) {\n\t\t\treturn xhrPool[i];\n\t\t}\n\t}\n\treturn createXhr();\n}\n\n\nfunction querystring(obj: any): string {\n\tif (isObj(obj)) {\n\t\treturn Object.keys(obj)\n\t\t\t.map(\n\t\t\t\tk =>\n\t\t\t\t\tArray.isArray(obj[k])\n\t\t\t\t\t\t? obj[k]\n\t\t\t\t\t\t\t.map((v: any) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n\t\t\t\t\t\t\t.join('&')\n\t\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n\t\t\t)\n\t\t\t.join('&');\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n}\n\nconst defaultSerialize: Serialize = ({ data, method, contentType = MIME.json, url, cache }) => {\n\tif (!cache) {\n\t\t// 字符串不可变, 所以这里懒得起名了, 赋值url其实不影响外部\n\t\t// tslint:disable-next-line\n\t\turl += ~url.indexOf('?') ? `&_=${++cacheRand}` : `?_=${++cacheRand}`;\n\t}\n\tif (method === 'GET' || method === 'HEAD') {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (\n\t\tdata instanceof Document ||\n\t\t// URLSearchParams和ReadableStream暂时不考虑支持了, 浏览器版本要求比较高\n\t\t// data instanceof URLSearchParams ||\n\t\t// data instanceof ReadableStream ||\n\t\tdata instanceof Blob ||\n\t\tdata instanceof FormData ||\n\t\tdata instanceof ArrayBuffer ||\n\t\tdata instanceof ArrayBufferView ||\n\t\ttypeof data === 'string'\n\t) {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tlet resultData = null;\n\tif (isJSON(contentType)) {\n\t\tresultData = JSON.stringify(data);\n\t} else if (isForm(contentType)) {\n\t\tresultData = querystring(data);\n\t} else {\n\t\tthrow new TypeError(\n\t\t\t'Unknown data type, you can provide a custom serialize function in options to override the default.'\n\t\t);\n\t}\n\treturn {\n\t\turl,\n\t\tdata: resultData\n\t};\n}\n\nconst defaultDeserialize: Deserialize = ({ data, contentType, acceptType }) => {\n\tlet rst = null;\n\tif (isStr(data) && (isStr(contentType) && isJSON(contentType) || isJSON(acceptType))) {\n\t\ttry {\n\t\t\trst = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\tconsole.error('Invalid json string');\n\t\t\trst = data;\n\t\t}\n\t} else {\n\t\trst = data;\n\t}\n\treturn rst;\n}\n\nfunction setHeaders(xhr: CustomXMLHttpRequest, headers: any) {\n\tif (isObj(headers)) {\n\t\tObject.keys(headers).forEach(k => xhr.setRequestHeader(k, headers[k]));\n\t}\n}\n\nfunction setEvents(target: CustomXMLHttpRequest | XMLHttpRequestUpload, evts?: XhrEventsObj) {\n\tif (isObj(evts) && target) {\n\t\t// 不用addEventListener是它不方便reset\n\t\tObject.keys(evts)\n\t\t\t.filter(k => events.includes(k as XhrEvents))\n\t\t\t.forEach(k => (target as any)[k] = evts[k as XhrEvents]);\n\t}\n}\n\n\nfunction jsonp(opts: JsonpOptions) {\n\tlet {\n\t\turl,\n\t\t/* tslint:disable */\n\t\tcache = false,\n\t\tcrossorigin,\n\t\tcallbackName,\n\t\tsuccess,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tconst hasOriginalCb = callbackName && isFn((window as any)[callbackName]);\n\tif (isStr(callbackName) && !hasOriginalCb) {\n\t\tthrow new Error(`${callbackName} is not a function.`);\n\t}\n\n\tconst hasSuccessCb = isFn(success),\n\t\thasErrorCb = isFn(error),\n\t\thasCompleteCb = isFn(complete),\n\t\t// hasOriginalCb为true的话, callbackName肯定不为空, 前面已经判断过了, 这里把空值去除\n\t\toriginalCb = hasOriginalCb ? (window as any)[callbackName!] : undefined;\n\n\tif (!hasSuccessCb && !hasCompleteCb && !hasOriginalCb) {\n\t\tthrow new Error('Must set a success callback or complete callback.');\n\t}\n\tif (!isStr(url)) {\n\t\tthrow new TypeError(`url expected a non empty string, but received ${JSON.stringify(url)}.`);\n\t}\n\n\tconst hasCustomCbName = isStr(callbackName),\n\t\t// hasCustomCbName为true的话, callbackName肯定为非空字符串, 这里去掉空值\n\t\tcbName = hasCustomCbName ? callbackName! : `jsonp${++jsonpId}`,\n\t\tscript = document.createElement('script');\n\n\tif (url.split('?').length < 3) {\n\t\t// 没有占位符的话默认callback\n\t\tconst qs = `callback=${encodeURIComponent(cbName)}`;\n\t\turl = ~url.indexOf('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t} else {\n\t\turl = url.replace(/\\?(.+)=\\?/, `?$1=${encodeURIComponent(cbName)}`);\n\t}\n\t!cache && (url += `&_=${++cacheRand}`);\n\n\tconst w = window as any;\n\tif (!w[cbName] || !w[cbName].hasHook) {\n\t\tw[cbName] = function (...args: Array<any>) {\n\t\t\t// 放前面, 防止后面的callback抛异常导致删不掉\n\t\t\tif (!hasCustomCbName) {\n\t\t\t\tdelete w[cbName];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (hasOriginalCb) {\n\t\t\t\t\toriginalCb(...args);\n\t\t\t\t} else if (hasSuccessCb) {\n\t\t\t\t\t// 这里hasSuccessCb已经是类型保护isFn的结果了, 但是需要直接调用isFn\n\t\t\t\t\t// 才能获得类型保护, 为了减少函数调用, 就暂存了类型保护的结果为hasSuccessCb\n\t\t\t\t\t// 所以这里success也应当是不为空的, 去掉空值, 但是是用!去除还是用as\n\t\t\t\t\t// 应该是都可以, 但是这里来讲应该是!好一点, 因为这里success用as那就是Callble,\n\t\t\t\t\t// 用!那就是JsonpOptions中定义的类型, Callble更关心success是否可以作为函数调用,\n\t\t\t\t\t// 而JsonpOptions中的定义更关心具体参数的类型和个数, 这里我们更关心参数类型,\n\t\t\t\t\t// 所以用!去除空值\n\t\t\t\t\t(success!)(...args);\n\t\t\t\t}\n\t\t\t\thasCompleteCb && complete!('success');\n\t\t\t\t// 同样, hasOriginalCb为true则callbackName不可能空, 去除空值\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t} catch (e) {\n\t\t\t\t// 个人觉得应该crash掉让用户修复异常而不是继续执行complete\n\t\t\t\t// 所以这里只是为了还原window上原有的函数而不是为了吞掉异常\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\tw[cbName].hasHook = true;\n\t}\n\n\tscript.onerror = function (e) {\n\t\tdocument.body.removeChild(script);\n\t\tif (!hasCustomCbName) {\n\t\t\tdelete w[cbName];\n\t\t}\n\t\t// 都没有的话就继续抛出异常, 方便异常监控系统捕获\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`Load script ${url} failed.`);\n\t\t}\n\t\thasErrorCb && error!(new Error(`Load script ${url} failed.`), e);\n\t\thasCompleteCb && complete!('error');\n\t};\n\n\tscript.onload = () => setTimeout(() => document.body.removeChild(script), 3000);\n\n\tcrossorigin && (script.crossOrigin = crossorigin);\n\tscript.src = url;\n\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\t// 允许拦截掉不发送请求\n\t\t\tconst rst = beforeSend!(url, opts);\n\t\t\trst !== false && document.body.appendChild(script);\n\t\t});\n\t} else {\n\t\tdocument.body.appendChild(script);\n\t}\n}\n\nfunction getResponse(xhr: CustomXMLHttpRequest, key: ResponseCategory): any {\n\t// 在有responseType的情况下, 访问responseXML, responseText等都有可能抛出异常\n\ttry {\n\t\treturn xhr[key];\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\n\nfunction ajax(opts: AsyncOptions) {\n\tlet {\n\t\turl = lc.href,\n\t\tmethod = 'GET' as HTTPMethod,\n\t\tcontentType: reqCtype,\n\t\tdataType: acceptType = 'json',\n\t\t/* tslint:disable */\n\t\tdata: reqRawData,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror,\n\t\theaders,\n\t\tmimeType,\n\t\tresponseType = '' as XMLHttpRequestResponseType,\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\ttimeout = 0,\n\t\tontimeout,\n\t\tevents,\n\t\tuploadEvents,\n\t\twithCredentials = false,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tmethod = method.toUpperCase().trim() as HTTPMethod;\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isStr(reqCtype)) {\n\t\t(MIME as any)[reqCtype] && (reqCtype = MIME[reqCtype as keyof MIMEType]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\tmaybeProtocol = /^([\\w-]+:)\\/\\//.exec(url),\n\t\threfProtocol = /^(https?):\\/\\//.exec(lc.href),\n\t\tprotocol = maybeProtocol ? maybeProtocol[1] : hrefProtocol ? hrefProtocol[1] : null,\n\t\txhr = xhrFactory(),\n\t\thasCompleteCb = isFn(complete),\n\t\thasErrorCb = isFn(error),\n\t\thasSuccessCb = isFn(success);\n\n\tlet reqData: any,\n\t\terrCalled = false,\n\t\tcompleteCalled = false;\n\t// 这里不用捕获异常去重置xhr是因为xhr还没激活\n\t({ url, data: reqData } = slz({ data: reqRawData, method, contentType: reqCtype, url, cache }));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, true, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isStr(reqData)) {\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isStr(acceptType)) {\n\t\t(MIME as any)[acceptType] && (acceptType = MIME[acceptType as keyof MIMEType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\tsetHeaders(xhr, headers);\n\n\tisStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\twithCredentials && (xhr.withCredentials = withCredentials);\n\tresponseType && (xhr.responseType = responseType);\n\ttimeout && (xhr.timeout = timeout);\n\tif (isFn(ontimeout)) {\n\t\txhr.ontimeout = function (e) {\n\t\t\tontimeout!(e);\n\t\t\thasCompleteCb && complete!(this, 'timeout');\n\t\t};\n\t} else if (timeout && !isFn(xhr.ontimeout)) {\n\t\txhr.ontimeout = function () {\n\t\t\tif (hasCompleteCb) {\n\t\t\t\tcomplete!(this, 'timeout');\n\t\t\t} else {\n\t\t\t\t// 如果没监听ontimeout但是设置了timeout, window.onerror不会捕获这个错误, 所以手动抛个\n\t\t\t\tthrow new Error(`Request ${(this as CustomXMLHttpRequest).requestURL} timeout.`);\n\t\t\t}\n\t\t};\n\t}\n\n\t// loadend无论同步还是异步请求, 无论前面的事件是否抛异常, 它都会执行\n\tif (isFn(xhr.onloadend)) {\n\t\tconst originalLoadend = xhr.onloadend;\n\t\txhr.onloadend = function (e) {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t\toriginalLoadend.call(this, e);\n\t\t};\n\t} else {\n\t\txhr.onloadend = function () {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t};\n\t}\n\t// 覆盖掉用户自定义onreadystatechange\n\txhr.onreadystatechange = function (e) {\n\t\tif (this.readyState === 4) {\n\t\t\tconst resCtype = this.getResponseHeader('Content-Type');\n\t\t\t// 这里也不用捕获异常, 因为xhr.onloadend会在之后帮我们回收xhr\n\t\t\tconst resData = dslz({\n\t\t\t\tdata: getResponse(xhr, 'responseXML') || getResponse(xhr, 'response') || getResponse(xhr, 'responseText'),\n\t\t\t\tcontentType: resCtype,\n\t\t\t\tacceptType\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\t(this.status >= 200 && this.status < 300) ||\n\t\t\t\tthis.status === 304 ||\n\t\t\t\t(this.status === 0 && protocol === 'file:')\n\t\t\t) {\n\t\t\t\t// 异常直接抛\n\t\t\t\thasSuccessCb && success!(resData, this, e);\n\t\t\t\thasCompleteCb && complete!(this, 'success');\n\t\t\t} else if (this.status !== 0) {\n\t\t\t\t// 这类错误xhr.onerror和window.onerror都不捕获所以手动抛一个\n\t\t\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Remote server error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}, message: ${this.statusText}, response: ${this.responseText}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// 理论上来讲好像没必要再注册xhr.onerror了, 因为如果有error那status必然为0\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\t\t\t\t// 但是不加个心里不踏实...总感觉会不会有浏览器没按规范实现\n\t\t\t\t// 不过知名的库页都没监听onerror, 那说明应该是都按规范实现了的\n\t\t\t\t// 但是我要加!!!\n\t\t\t\tif (hasErrorCb) {\n\t\t\t\t\terrCalled = true;\n\t\t\t\t\terror!(new Error(`Remote server error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}, message: ${this.statusText}, response: ${this.responseText}.`), resData, this, e);\n\t\t\t\t}\n\t\t\t\tif (hasCompleteCb) {\n\t\t\t\t\tcompleteCalled = true;\n\t\t\t\t\tcomplete!(this, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 覆盖\n\txhr.onerror = function (e) {\n\t\t// 跨域错误会在这里捕获, 但是window.onerror不捕获, 所以也手动抛一个\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`An error occurred, maybe crossorigin error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}.`);\n\t\t}\n\t\tif (!errCalled && hasErrorCb) {\n\t\t\terror!(new Error(`Network error or browser restricted. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}`), undefined, this, e);\n\t\t}\n\t\tif (!completeCalled && hasCompleteCb) {\n\t\t\tcomplete!(this, 'error');\n\t\t}\n\t};\n\n\t// 哎...都异步吧\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\tlet rst;\n\t\t\ttry {\n\t\t\t\trst = beforeSend!(xhr, opts);\n\t\t\t} catch (e) {\n\t\t\t\t// 恶心之处就在于每个用户定义的callback都可能触发异常, 然而我还要回收xhr\n\t\t\t\tresetXhr(xhr);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tif (rst !== false) {\n\t\t\t\txhr.send(reqData || null);\n\t\t\t} else {\n\t\t\t\tresetXhr(xhr);\n\t\t\t}\n\t\t});\n\t} else {\n\t\txhr.send(reqData || null);\n\t}\n\t// 不暴露xhr\n\treturn {\n\t\tabort() {\n\t\t\txhr.abort();\n\t\t}\n\t};\n}\n\nexport function config({ pool = false, serialize, deserialize }: ConfigOptions = {}) {\n\tif (pool) {\n\t\txhrPool.length = 0;\n\t\tlet poolSize = typeof pool === 'number' ? pool : 5;\n\t\tif (poolSize < 0) {\n\t\t\tthrow new Error('pool size must >= 0');\n\t\t}\n\t\twhile (poolSize--) {\n\t\t\txhrPool.push(createXhr());\n\t\t}\n\t}\n\tisFn(serialize) && (globalSerialize = serialize);\n\tisFn(deserialize) && (globalDeserialize = deserialize);\n}\n\nexport { ajax, jsonp };\n\nexport function get(url: string, opts: RequestOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function head(url: string, opts: RequestOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'HEAD'\n\t});\n}\n\nexport function post(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n}\n\nexport function put(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n}\n\nexport function del(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n}\n\nexport function patch(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PATCH'\n\t});\n}\n\nexport function options(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'OPTIONS'\n\t});\n}\n"],"names":[],"mappings":"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"}