{"version":3,"file":"tinyjx.min.js","sources":["tinyjx.ts"],"sourcesContent":["/* global DEBUG */\ndeclare const DEBUG: boolean;\n\ninterface SerializeOptions {\n\tdata: any;\n\tmethod: HTTPMethod;\n\tcontentType?: string;\n\turl: string;\n\tcache: boolean;\n}\ninterface SerializeResult {\n\turl: string;\n\tdata: any;\n}\ninterface DeserializeOptions {\n\tdata: any;\n\tcontentType: string | null | undefined;\n\tacceptType: string;\n}\n\ninterface ConfigOptions {\n\tpool?: number | boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n}\n\ninterface RequestOptions {\n\tcontentType?: string;\n\tbeforeSend?(xhr: CustomXMLHttpRequest, options: AsyncOptions): boolean | void;\n\tcomplete?(xhr: XMLHttpRequest, status: string): any;\n\tdataType?: string;\n\t// 不允许取得_active和requestURL, 所以用XMLHttpRequest而不是CustomXMLHttpRequest\n\terror?(err: Error, data: any, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\theaders?: KVObject;\n\tmimeType?: keyof MIMEType;\n\tusername?: string;\n\tpassword?: string;\n\tsuccess?(data: any, xhr: XMLHttpRequest, event: Event): any;\n\tevents?: XhrEventsObj;\n\tuploadEvents?: XhrEventsObj;\n\tcache?: boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n\tresponseType?: XMLHttpRequestResponseType;\n\ttimeout?: number;\n\tontimeout?(event: ProgressEvent): any;\n\twithCredentials?: boolean;\n}\n\ninterface BodyMethodOptions extends RequestOptions {\n\tdata?: any;\n}\n\ninterface AsyncOptions extends BodyMethodOptions {\n\turl?: string;\n\tmethod?: HTTPMethod;\n}\n\ninterface CustomXMLHttpRequest extends XMLHttpRequest {\n\t_id: number;\n\t_active: boolean;\n\t// 这个是后来加的, 实例化的时候不一定有\n\trequestURL?: string;\n}\n\ninterface MIMEType {\n\tjson: string;\n\tform: string;\n\thtml: string;\n\txml: string;\n\ttext: string;\n}\n\ninterface KVObject {\n\t[k: string]: any;\n}\n\ninterface JsonpOptions {\n\turl: string;\n\tcache?: boolean;\n\tcrossorigin?: string;\n\tcallbackName?: string;\n\t// success不关心返回值就没必要去约束为void\n\tsuccess?(data?: any): any;\n\t// beforeSend关心返回值是否是布尔值, 那就还是约束下\n\tbeforeSend?(url: string, options: JsonpOptions): boolean | void;\n\tcomplete?(status: string): any;\n\terror?(err: Error, event: string | UIEvent | Event): any;\n}\n\ntype XhrEvents = 'onloadstart' | 'onprogress' | 'onabort' | 'onerror' | 'onload' | 'ontimeout' | 'onloadend' | 'onreadystatechange';\n\ntype ResponseCategory = 'responseXML' | 'response' | 'responseText';\n\ntype Callable = (...args: Array<any>) => any;\n\ntype HTTPMethod = 'GET' | 'POST' | 'HEAD' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'get' | 'post' | 'head' | 'put' | 'patch' | 'delete' | 'options';\n\ntype Serialize = (options: SerializeOptions) => SerializeResult;\n\ntype Deserialize = (options: DeserializeOptions) => any;\n\ntype XhrEventsObj = {\n\t[k in XhrEvents]: Callable\n};\n\nconst isFn = (fn: any): fn is Callable => typeof fn === 'function';\n\nconst isJSON = (cType: string): boolean => /application\\/json/i.test(cType);\n\nconst isForm = (cType: string): boolean => /application\\/x-www-form-urlencoded/i.test(cType);\n\nconst isStr = (v: any): v is string => v && typeof v === 'string';\n\nconst isObj = (o: any): o is KVObject => Object.prototype.toString.call(o) === '[object Object]';\n\nconst lc = window.location;\n\nconst xhrPool: Array<CustomXMLHttpRequest> = [],\n\t// tslint:disable-next-line\n\tArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor,\n\t// 为什么这里不用字符串枚举?\n\t// 因为枚举的反查带来不必要的开销, 而const枚举\n\t// 又会在编译时内联, 不能使用key索引查找值,\n\t// 另一方面又希望有一些类型检查, 所以折中这样\n\tMIME: MIMEType = {\n\t\tjson: 'application/json',\n\t\tform: 'application/x-www-form-urlencoded',\n\t\thtml: 'text/html',\n\t\txml: 'application/xml',\n\t\ttext: 'text/plain'\n\t},\n\tevents: Array<XhrEvents> = [\n\t\t'onloadstart',\n\t\t'onprogress',\n\t\t'onabort',\n\t\t'onerror',\n\t\t'onload',\n\t\t'ontimeout',\n\t\t'onloadend',\n\t\t'onreadystatechange'\n\t];\n\nlet jsonpId = Date.now(),\n\tcacheRand = Date.now() + 5,\n\tglobalSerialize: any = null,\n\tglobalDeserialize: any = null;\n\nif (DEBUG) {\n\tvar xhrId = 0;\n}\n\nfunction createXhr(): CustomXMLHttpRequest {\n\t// 不用class继承, 省得编译出来多一个函数\n\tconst xhr = new XMLHttpRequest();\n\tObject.defineProperty(xhr, '_active', {\n\t\tvalue: false,\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tif (DEBUG) {\n\t\tObject.defineProperty(xhr, '_id', {\n\t\t\tvalue: ++xhrId,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\treturn xhr as CustomXMLHttpRequest;\n}\n\nfunction resetXhr(xhr: CustomXMLHttpRequest) {\n\t// responseType, withCredentials以及header相关的会在open后重置\n\txhr._active = false;\n\t// 可能是同步请求那就不能设置timeout\n\ttry {\n\t\txhr.timeout = 0;\n\t\txhr.requestURL = '';\n\t// tslint:disable-next-line\n\t} catch (e) { }\n\tevents.forEach(v => (xhr[v] = null));\n\t// 这里不建议给XMLHttpRequestUpload patch一个索引类型, 可能影响到其他地方\n\txhr.upload && events.forEach(v => ((xhr.upload as any)[v] = null));\n}\n\nfunction xhrFactory(): CustomXMLHttpRequest {\n\tfor (let i = 0, len = xhrPool.length; i < len; ++i) {\n\t\tif (!xhrPool[i]._active) {\n\t\t\treturn xhrPool[i];\n\t\t}\n\t}\n\treturn createXhr();\n}\n\n\nfunction querystring(obj: any): string {\n\tif (isObj(obj)) {\n\t\treturn Object.keys(obj)\n\t\t\t.map(\n\t\t\t\tk =>\n\t\t\t\t\tArray.isArray(obj[k])\n\t\t\t\t\t\t? obj[k]\n\t\t\t\t\t\t\t.map((v: any) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n\t\t\t\t\t\t\t.join('&')\n\t\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n\t\t\t)\n\t\t\t.join('&');\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n}\n\nconst defaultSerialize: Serialize = ({ data, method, contentType = MIME.json, url, cache }) => {\n\tif (!cache) {\n\t\t// 字符串不可变, 所以这里懒得起名了, 赋值url其实不影响外部\n\t\t// tslint:disable-next-line\n\t\turl += ~url.indexOf('?') ? `&_=${++cacheRand}` : `?_=${++cacheRand}`;\n\t}\n\tif (method === 'GET' || method === 'HEAD') {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (\n\t\tdata instanceof Document ||\n\t\t// URLSearchParams和ReadableStream暂时不考虑支持了, 浏览器版本要求比较高\n\t\t// data instanceof URLSearchParams ||\n\t\t// data instanceof ReadableStream ||\n\t\tdata instanceof Blob ||\n\t\tdata instanceof FormData ||\n\t\tdata instanceof ArrayBuffer ||\n\t\tdata instanceof ArrayBufferView ||\n\t\ttypeof data === 'string'\n\t) {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tlet resultData = null;\n\tif (isJSON(contentType)) {\n\t\tresultData = JSON.stringify(data);\n\t} else if (isForm(contentType)) {\n\t\tresultData = querystring(data);\n\t} else {\n\t\tthrow new TypeError(\n\t\t\t'Unknown data type, you can provide a custom serialize function in options to override the default.'\n\t\t);\n\t}\n\treturn {\n\t\turl,\n\t\tdata: resultData\n\t};\n}\n\nconst defaultDeserialize: Deserialize = ({ data, contentType, acceptType }) => {\n\tlet rst = null;\n\tif (isStr(data) && (isStr(contentType) && isJSON(contentType) || isJSON(acceptType))) {\n\t\ttry {\n\t\t\trst = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\tconsole.error('Invalid json string');\n\t\t\trst = data;\n\t\t}\n\t} else {\n\t\trst = data;\n\t}\n\treturn rst;\n}\n\nfunction setHeaders(xhr: CustomXMLHttpRequest, headers: any) {\n\tif (isObj(headers)) {\n\t\tObject.keys(headers).forEach(k => xhr.setRequestHeader(k, headers[k]));\n\t}\n}\n\nfunction setEvents(target: CustomXMLHttpRequest | XMLHttpRequestUpload, evts?: XhrEventsObj) {\n\tif (isObj(evts) && target) {\n\t\t// 不用addEventListener是它不方便reset\n\t\tObject.keys(evts)\n\t\t\t.filter(k => events.includes(k as XhrEvents))\n\t\t\t.forEach(k => (target as any)[k] = evts[k as XhrEvents]);\n\t}\n}\n\n\nfunction jsonp(opts: JsonpOptions) {\n\tlet {\n\t\turl,\n\t\t/* tslint:disable */\n\t\tcache = false,\n\t\tcrossorigin,\n\t\tcallbackName,\n\t\tsuccess,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tconst hasOriginalCb = callbackName && isFn((window as any)[callbackName]);\n\tif (isStr(callbackName) && !hasOriginalCb) {\n\t\tthrow new Error(`${callbackName} is not a function.`);\n\t}\n\n\tconst hasSuccessCb = isFn(success),\n\t\thasErrorCb = isFn(error),\n\t\thasCompleteCb = isFn(complete),\n\t\t// hasOriginalCb为true的话, callbackName肯定不为空, 前面已经判断过了, 这里把空值去除\n\t\toriginalCb = hasOriginalCb ? (window as any)[callbackName!] : undefined;\n\n\tif (!hasSuccessCb && !hasCompleteCb && !hasOriginalCb) {\n\t\tthrow new Error('Must set a success callback or complete callback.');\n\t}\n\tif (!isStr(url)) {\n\t\tthrow new TypeError(`url expected a non empty string, but received ${JSON.stringify(url)}.`);\n\t}\n\n\tconst hasCustomCbName = isStr(callbackName),\n\t\t// hasCustomCbName为true的话, callbackName肯定为非空字符串, 这里去掉空值\n\t\tcbName = hasCustomCbName ? callbackName! : `jsonp${++jsonpId}`,\n\t\tscript = document.createElement('script');\n\n\tif (url.split('?').length < 3) {\n\t\t// 没有占位符的话默认callback\n\t\tconst qs = `callback=${encodeURIComponent(cbName)}`;\n\t\turl = ~url.indexOf('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t} else {\n\t\turl = url.replace(/\\?(.+)=\\?/, `?$1=${encodeURIComponent(cbName)}`);\n\t}\n\t!cache && (url += `&_=${++cacheRand}`);\n\n\tconst w = window as any;\n\tif (!w[cbName] || !w[cbName].hasHook) {\n\t\tw[cbName] = function (...args: Array<any>) {\n\t\t\t// 放前面, 防止后面的callback抛异常导致删不掉\n\t\t\tif (!hasCustomCbName) {\n\t\t\t\tdelete w[cbName];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (hasOriginalCb) {\n\t\t\t\t\toriginalCb(...args);\n\t\t\t\t} else if (hasSuccessCb) {\n\t\t\t\t\t// 这里hasSuccessCb已经是类型保护isFn的结果了, 但是需要直接调用isFn\n\t\t\t\t\t// 才能获得类型保护, 为了减少函数调用, 就暂存了类型保护的结果为hasSuccessCb\n\t\t\t\t\t// 所以这里success也应当是不为空的, 去掉空值, 但是是用!去除还是用as\n\t\t\t\t\t// 应该是都可以, 但是这里来讲应该是!好一点, 因为这里success用as那就是Callble,\n\t\t\t\t\t// 用!那就是JsonpOptions中定义的类型, Callble更关心success是否可以作为函数调用,\n\t\t\t\t\t// 而JsonpOptions中的定义更关心具体参数的类型和个数, 这里我们更关心参数类型,\n\t\t\t\t\t// 所以用!去除空值\n\t\t\t\t\t(success!)(...args);\n\t\t\t\t}\n\t\t\t\thasCompleteCb && complete!('success');\n\t\t\t\t// 同样, hasOriginalCb为true则callbackName不可能空, 去除空值\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t} catch (e) {\n\t\t\t\t// 个人觉得应该crash掉让用户修复异常而不是继续执行complete\n\t\t\t\t// 所以这里只是为了还原window上原有的函数而不是为了吞掉异常\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\tw[cbName].hasHook = true;\n\t}\n\n\tscript.onerror = function (e) {\n\t\tdocument.body.removeChild(script);\n\t\tif (!hasCustomCbName) {\n\t\t\tdelete w[cbName];\n\t\t}\n\t\t// 都没有的话就继续抛出异常, 方便异常监控系统捕获\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`Load script ${url} failed.`);\n\t\t}\n\t\thasErrorCb && error!(new Error(`Load script ${url} failed.`), e);\n\t\thasCompleteCb && complete!('error');\n\t};\n\n\tscript.onload = () => setTimeout(() => document.body.removeChild(script), 3000);\n\n\tcrossorigin && (script.crossOrigin = crossorigin);\n\tscript.src = url;\n\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\t// 允许拦截掉不发送请求\n\t\t\tconst rst = beforeSend!(url, opts);\n\t\t\trst !== false && document.body.appendChild(script);\n\t\t});\n\t} else {\n\t\tdocument.body.appendChild(script);\n\t}\n}\n\nfunction getResponse(xhr: CustomXMLHttpRequest, key: ResponseCategory): any {\n\t// 在有responseType的情况下, 访问responseXML, responseText等都有可能抛出异常\n\ttry {\n\t\treturn xhr[key];\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\n\nfunction ajax(opts: AsyncOptions) {\n\tlet {\n\t\turl = lc.href,\n\t\tmethod = 'GET' as HTTPMethod,\n\t\tcontentType: reqCtype,\n\t\tdataType: acceptType = 'json',\n\t\t/* tslint:disable */\n\t\tdata: reqRawData,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror,\n\t\theaders,\n\t\tmimeType,\n\t\tresponseType = '' as XMLHttpRequestResponseType,\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\ttimeout = 0,\n\t\tontimeout,\n\t\tevents,\n\t\tuploadEvents,\n\t\twithCredentials = false,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tmethod = method.toUpperCase().trim() as HTTPMethod;\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isStr(reqCtype)) {\n\t\t(MIME as any)[reqCtype] && (reqCtype = MIME[reqCtype as keyof MIMEType]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\tmaybeProtocol = /^([\\w-]+:)\\/\\//.exec(url),\n\t\threfProtocol = /^(https?):\\/\\//.exec(lc.href),\n\t\tprotocol = maybeProtocol ? maybeProtocol[1] : hrefProtocol ? hrefProtocol[1] : null,\n\t\txhr = xhrFactory(),\n\t\thasCompleteCb = isFn(complete),\n\t\thasErrorCb = isFn(error),\n\t\thasSuccessCb = isFn(success);\n\n\tlet reqData: any,\n\t\terrCalled = false,\n\t\tcompleteCalled = false;\n\t// 这里不用捕获异常去重置xhr是因为xhr还没激活\n\t({ url, data: reqData } = slz({ data: reqRawData, method, contentType: reqCtype, url, cache }));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, true, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isStr(reqData)) {\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isStr(acceptType)) {\n\t\t(MIME as any)[acceptType] && (acceptType = MIME[acceptType as keyof MIMEType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\tsetHeaders(xhr, headers);\n\n\tisStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\twithCredentials && (xhr.withCredentials = withCredentials);\n\tresponseType && (xhr.responseType = responseType);\n\ttimeout && (xhr.timeout = timeout);\n\tif (isFn(ontimeout)) {\n\t\txhr.ontimeout = function (e) {\n\t\t\tontimeout!(e);\n\t\t\thasCompleteCb && complete!(this, 'timeout');\n\t\t};\n\t} else if (timeout && !isFn(xhr.ontimeout)) {\n\t\txhr.ontimeout = function () {\n\t\t\tif (hasCompleteCb) {\n\t\t\t\tcomplete!(this, 'timeout');\n\t\t\t} else {\n\t\t\t\t// 如果没监听ontimeout但是设置了timeout, window.onerror不会捕获这个错误, 所以手动抛个\n\t\t\t\tthrow new Error(`Request ${(this as CustomXMLHttpRequest).requestURL} timeout.`);\n\t\t\t}\n\t\t};\n\t}\n\n\t// loadend无论同步还是异步请求, 无论前面的事件是否抛异常, 它都会执行\n\tif (isFn(xhr.onloadend)) {\n\t\tconst originalLoadend = xhr.onloadend;\n\t\txhr.onloadend = function (e) {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t\toriginalLoadend.call(this, e);\n\t\t};\n\t} else {\n\t\txhr.onloadend = function () {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t};\n\t}\n\t// 覆盖掉用户自定义onreadystatechange\n\txhr.onreadystatechange = function (e) {\n\t\tif (this.readyState === 4) {\n\t\t\tconst resCtype = this.getResponseHeader('Content-Type');\n\t\t\t// 这里也不用捕获异常, 因为xhr.onloadend会在之后帮我们回收xhr\n\t\t\tconst resData = dslz({\n\t\t\t\tdata: getResponse(xhr, 'responseXML') || getResponse(xhr, 'response') || getResponse(xhr, 'responseText'),\n\t\t\t\tcontentType: resCtype,\n\t\t\t\tacceptType\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\t(this.status >= 200 && this.status < 300) ||\n\t\t\t\tthis.status === 304 ||\n\t\t\t\t(this.status === 0 && protocol === 'file:')\n\t\t\t) {\n\t\t\t\t// 异常直接抛\n\t\t\t\thasSuccessCb && success!(resData, this, e);\n\t\t\t\thasCompleteCb && complete!(this, 'success');\n\t\t\t} else if (this.status !== 0) {\n\t\t\t\t// 这类错误xhr.onerror和window.onerror都不捕获所以手动抛一个\n\t\t\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Remote server error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}, message: ${this.statusText}, response: ${this.responseText}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// 理论上来讲好像没必要再注册xhr.onerror了, 因为如果有error那status必然为0\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\t\t\t\t// 但是不加个心里不踏实...总感觉会不会有浏览器没按规范实现\n\t\t\t\t// 不过知名的库页都没监听onerror, 那说明应该是都按规范实现了的\n\t\t\t\t// 但是我要加!!!\n\t\t\t\tif (hasErrorCb) {\n\t\t\t\t\terrCalled = true;\n\t\t\t\t\terror!(new Error(`Remote server error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}, message: ${this.statusText}, response: ${this.responseText}.`), resData, this, e);\n\t\t\t\t}\n\t\t\t\tif (hasCompleteCb) {\n\t\t\t\t\tcompleteCalled = true;\n\t\t\t\t\tcomplete!(this, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 覆盖\n\txhr.onerror = function (e) {\n\t\t// 跨域错误会在这里捕获, 但是window.onerror不捕获, 所以也手动抛一个\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`An error occurred, maybe crossorigin error. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}.`);\n\t\t}\n\t\tif (!errCalled && hasErrorCb) {\n\t\t\terror!(new Error(`Network error or browser restricted. Request URL: ${(this as CustomXMLHttpRequest).requestURL}, Status code: ${this.status}`), undefined, this, e);\n\t\t}\n\t\tif (!completeCalled && hasCompleteCb) {\n\t\t\tcomplete!(this, 'error');\n\t\t}\n\t};\n\n\t// 哎...都异步吧\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\tlet rst;\n\t\t\ttry {\n\t\t\t\trst = beforeSend!(xhr, opts);\n\t\t\t} catch (e) {\n\t\t\t\t// 恶心之处就在于每个用户定义的callback都可能触发异常, 然而我还要回收xhr\n\t\t\t\tresetXhr(xhr);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tif (rst !== false) {\n\t\t\t\txhr.send(reqData || null);\n\t\t\t} else {\n\t\t\t\tresetXhr(xhr);\n\t\t\t}\n\t\t});\n\t} else {\n\t\txhr.send(reqData || null);\n\t}\n\t// 不暴露xhr\n\treturn {\n\t\tabort() {\n\t\t\txhr.abort();\n\t\t}\n\t};\n}\n\nexport function config({ pool = false, serialize, deserialize }: ConfigOptions = {}) {\n\tif (pool) {\n\t\txhrPool.length = 0;\n\t\tlet poolSize = typeof pool === 'number' ? pool : 5;\n\t\tif (poolSize < 0) {\n\t\t\tthrow new Error('pool size must >= 0');\n\t\t}\n\t\twhile (poolSize--) {\n\t\t\txhrPool.push(createXhr());\n\t\t}\n\t}\n\tisFn(serialize) && (globalSerialize = serialize);\n\tisFn(deserialize) && (globalDeserialize = deserialize);\n}\n\nexport { ajax, jsonp };\n\nexport function get(url: string, opts: RequestOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function head(url: string, opts: RequestOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'HEAD'\n\t});\n}\n\nexport function post(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n}\n\nexport function put(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n}\n\nexport function del(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n}\n\nexport function patch(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PATCH'\n\t});\n}\n\nexport function options(url: string, data: any, opts: BodyMethodOptions) {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'OPTIONS'\n\t});\n}\n"],"names":["createXhr","xhr","XMLHttpRequest","Object","defineProperty","value","writable","enumerable","resetXhr","_active","timeout","requestURL","e","events","forEach","v","upload","xhrFactory","i","len","xhrPool","length","querystring","obj","isObj","keys","map","k","Array","isArray","encodeURIComponent","join","JSON","stringify","setHeaders","headers","setRequestHeader","setEvents","target","evts","filter","includes","jsonp","opts","url","cache","crossorigin","callbackName","success","beforeSend","complete","error","hasOriginalCb","isFn","window","isStr","Error","hasSuccessCb","hasErrorCb","hasCompleteCb","originalCb","TypeError","hasCustomCbName","cbName","jsonpId","script","document","createElement","split","qs","indexOf","replace","cacheRand","w","hasHook","args","onerror","body","removeChild","onload","setTimeout","crossOrigin","src","rst","appendChild","getResponse","key","ajax","lc","href","method","contentType","reqCtype","dataType","acceptType","data","reqRawData","mimeType","responseType","username","password","ontimeout","uploadEvents","withCredentials","serialize","deserialize","toUpperCase","trim","MIME","slz","globalSerialize","defaultSerialize","dslz","globalDeserialize","defaultDeserialize","maybeProtocol","exec","hrefProtocol","protocol","reqData","errCalled","completeCalled","open","json","overrideMimeType","onloadend","originalLoadend","call","onreadystatechange","readyState","resCtype","getResponseHeader","resData","status","statusText","responseText","send","abort","fn","isJSON","cType","test","isForm","o","prototype","toString","location","ArrayBufferView","getPrototypeOf","Uint8Array","constructor","form","html","xml","text","Date","now","Document","Blob","FormData","ArrayBuffer","resultData","parse","console","pool","poolSize","push"],"mappings":"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"}