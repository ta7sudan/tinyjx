{"version":3,"file":"tinyjx.min.js","sources":["tinyjx.ts"],"sourcesContent":["/* global DEBUG */\ndeclare const DEBUG: boolean;\n\nexport interface Abortable {\n\tabort: () => void;\n}\n\nexport interface SerializeOptions {\n\tdata: any;\n\tmethod: HTTPMethod;\n\tprocessData: boolean;\n\tcontentType?: string;\n\turl: string;\n\tcache: boolean;\n}\n\nexport interface SerializeResult {\n\turl: string;\n\tdata: any;\n}\n\nexport interface DeserializeOptions {\n\tdata: any;\n\tcontentType: string | null | undefined;\n\tacceptType: string;\n}\n\nexport interface ConfigOptions {\n\tpool?: number | boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n}\n\nexport interface NoBodyMethodOptions {\n\tcontentType?: string;\n\tbeforeSend?(xhr: CustomXMLHttpRequest, options: AjaxOptions): boolean | void;\n\tcomplete?(xhr: XMLHttpRequest, status: string): any;\n\tdataType?: string;\n\tprocessData?: boolean;\n\t// 不允许取得_active和requestURL, 所以用XMLHttpRequest而不是CustomXMLHttpRequest\n\trecoverableError?(err: Error, resData: any, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\tunrecoverableError?(err: Error, xhr: XMLHttpRequest, event: UIEvent | Event): any;\n\theaders?: Record<string, string>;\n\tmimeType?: keyof MIMEType;\n\tusername?: string;\n\tpassword?: string;\n\tsuccess?(resData: any, xhr: XMLHttpRequest, event: Event): any;\n\tevents?: XhrEventsObj;\n\tuploadEvents?: XhrEventsObj;\n\tcache?: boolean;\n\tserialize?: Serialize;\n\tdeserialize?: Deserialize;\n\tresponseType?: XMLHttpRequestResponseType;\n\ttimeout?: number;\n\tontimeout?(event: ProgressEvent): any;\n\twithCredentials?: boolean;\n}\n\nexport interface BodyMethodOptions extends NoBodyMethodOptions {\n\tdata?: any;\n}\n\nexport interface AjaxOptions extends BodyMethodOptions {\n\turl?: string;\n\tmethod?: HTTPMethod;\n}\n\ninterface CustomXMLHttpRequest extends XMLHttpRequest {\n\t_id: number;\n\t_active: boolean;\n\trequestURL: string;\n}\n\ntype PredefinedContentType = 'json' | 'form' | 'html' | 'xml' | 'text';\n\nexport type MIMEType = Record<PredefinedContentType, string>;\n\nexport interface JsonpOptions {\n\turl: string;\n\tcache?: boolean;\n\tcrossorigin?: string;\n\tcallbackName?: string;\n\t// success不关心返回值就没必要去约束为void\n\tsuccess?(data?: any): any;\n\t// beforeSend关心返回值是否是布尔值, 那就还是约束下\n\tbeforeSend?(url: string, options: JsonpOptions): boolean | void;\n\tcomplete?(status: string): any;\n\terror?(err: Error, event: string | UIEvent | Event): any;\n}\n\ntype XhrEvents =\n\t| 'onloadstart'\n\t| 'onprogress'\n\t| 'onabort'\n\t| 'onerror'\n\t| 'onload'\n\t| 'ontimeout'\n\t| 'onloadend'\n\t| 'onreadystatechange';\n\ntype ResponseCategory = 'responseXML' | 'response' | 'responseText';\n\ntype Callable = (...args: Array<any>) => any;\n\nexport type HTTPMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'HEAD'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'get'\n\t| 'post'\n\t| 'head'\n\t| 'put'\n\t| 'patch'\n\t| 'delete'\n\t| 'options';\n\nexport type Serialize = (options: SerializeOptions) => SerializeResult;\n\nexport type Deserialize = (options: DeserializeOptions) => any;\n\nexport type XhrEventsObj = Record<XhrEvents, Callable>;\n\nconst isFn = (fn: any): fn is Callable => typeof fn === 'function';\n\nconst isJSON = (cType: string): boolean => /application\\/json/i.test(cType);\n\nconst isForm = (cType: string): boolean => /application\\/x-www-form-urlencoded/i.test(cType);\n\nconst isNoEmptyStr = (v: any): v is string => v && typeof v === 'string';\n\nconst isStrOrStrListRecord = (o: any): o is Record<string, string | Array<string>> =>\n\tObject.prototype.toString.call(o) === '[object Object]';\n\nconst lc = window.location;\n\nconst xhrPool: Array<CustomXMLHttpRequest> = [],\n\t// tslint:disable-next-line\n\tArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor,\n\t// 为什么这里不用字符串枚举?\n\t// 因为枚举的反查带来不必要的开销, 而const枚举\n\t// 又会在编译时内联, 不能使用key索引查找值,\n\t// 另一方面又希望有一些类型检查, 所以折中这样\n\tMIME: MIMEType = {\n\t\tjson: 'application/json',\n\t\tform: 'application/x-www-form-urlencoded',\n\t\thtml: 'text/html',\n\t\txml: 'application/xml',\n\t\ttext: 'text/plain'\n\t},\n\tevents: Array<XhrEvents> = [\n\t\t'onloadstart',\n\t\t'onprogress',\n\t\t'onabort',\n\t\t'onerror',\n\t\t'onload',\n\t\t'ontimeout',\n\t\t'onloadend',\n\t\t'onreadystatechange'\n\t];\n\nlet jsonpId = Date.now(),\n\tcacheRand = Date.now() + 5,\n\tglobalSerialize: Callable | null = null,\n\tglobalDeserialize: Callable | null = null;\n\nif (DEBUG) {\n\tvar xhrId = 0;\n}\n\nfunction createXhr(): CustomXMLHttpRequest {\n\t// 不用class继承, 省得编译出来多一个函数\n\tconst xhr: CustomXMLHttpRequest = new XMLHttpRequest() as CustomXMLHttpRequest;\n\tObject.defineProperty(xhr, '_active', {\n\t\tvalue: false,\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tObject.defineProperty(xhr, 'requestURL', {\n\t\tvalue: '',\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tif (DEBUG) {\n\t\tObject.defineProperty(xhr, '_id', {\n\t\t\tvalue: ++xhrId,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\treturn xhr;\n}\n\nfunction resetXhr(xhr: CustomXMLHttpRequest): void {\n\t// responseType, withCredentials以及header相关的会在open后重置\n\txhr._active = false;\n\t// 可能是同步请求那就不能设置timeout\n\ttry {\n\t\txhr.timeout = 0;\n\t\txhr.requestURL = '';\n\t\t// tslint:disable-next-line\n\t} catch (e) {}\n\tevents.forEach((v: XhrEvents) => (xhr[v] = null));\n\t// 这里不建议给XMLHttpRequestUpload patch一个索引类型, 可能影响到其他地方\n\txhr.upload && events.forEach((v: XhrEvents) => ((xhr.upload as any)[v] = null));\n}\n\nfunction xhrFactory(): CustomXMLHttpRequest {\n\tfor (let i = 0, len = xhrPool.length; i < len; ++i) {\n\t\tif (!xhrPool[i]._active) {\n\t\t\treturn xhrPool[i];\n\t\t}\n\t}\n\treturn createXhr();\n}\n\nfunction querystring(obj: Record<string, string | Array<string>>): string {\n\tif (isStrOrStrListRecord(obj)) {\n\t\treturn Object.keys(obj)\n\t\t\t.map((k: string) => {\n\t\t\t\tconst value = obj[k];\n\t\t\t\treturn Array.isArray(value)\n\t\t\t\t\t? value.map((v: string) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')\n\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(value)}`;\n\t\t\t})\n\t\t\t.join('&');\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n}\n\nconst defaultSerialize: Serialize = ({\n\tdata,\n\tmethod,\n\tprocessData,\n\tcontentType = MIME.json,\n\turl,\n\tcache\n}: SerializeOptions): SerializeResult => {\n\tif (!cache) {\n\t\t// 字符串不可变, 所以这里懒得起名了, 赋值url其实不影响外部\n\t\t// tslint:disable-next-line\n\t\turl += ~url.indexOf('?') ? `&_=${++cacheRand}` : `?_=${++cacheRand}`;\n\t}\n\tif (method === 'GET' || method === 'HEAD') {\n\t\tif (processData) {\n\t\t\t// tslint:disable-next-line\n\t\t\turl += ~url.indexOf('?') ? `&${querystring(data)}` : `?${querystring(data)}`;\n\t\t}\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (\n\t\tdata instanceof Document ||\n\t\t// URLSearchParams和ReadableStream暂时不考虑支持了, 浏览器版本要求比较高\n\t\t// data instanceof URLSearchParams ||\n\t\t// data instanceof ReadableStream ||\n\t\tdata instanceof Blob ||\n\t\tdata instanceof FormData ||\n\t\tdata instanceof ArrayBuffer ||\n\t\tdata instanceof ArrayBufferView ||\n\t\ttypeof data === 'string'\n\t) {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tlet resultData = null;\n\tif (isJSON(contentType)) {\n\t\tresultData = JSON.stringify(data);\n\t} else if (isForm(contentType)) {\n\t\tresultData = querystring(data);\n\t} else {\n\t\tthrow new TypeError(\n\t\t\t'Unknown data type, you can provide a custom serialize function in options to override the default.'\n\t\t);\n\t}\n\treturn {\n\t\turl,\n\t\tdata: resultData\n\t};\n};\n\nconst defaultDeserialize: Deserialize = ({\n\tdata,\n\tcontentType,\n\tacceptType\n}: DeserializeOptions): any => {\n\tlet rst = null;\n\tif (\n\t\tisNoEmptyStr(data) &&\n\t\t((isNoEmptyStr(contentType) && isJSON(contentType)) || isJSON(acceptType))\n\t) {\n\t\ttry {\n\t\t\trst = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\tconsole.error('Invalid json string');\n\t\t\trst = data;\n\t\t}\n\t} else {\n\t\trst = data;\n\t}\n\treturn rst;\n};\n\nfunction setHeaders(xhr: CustomXMLHttpRequest, headers: Record<string, string>): void {\n\tObject.keys(headers).forEach((k: string) => xhr.setRequestHeader(k, headers[k]));\n}\n\nfunction setEvents(target: CustomXMLHttpRequest | XMLHttpRequestUpload, evts?: XhrEventsObj): void {\n\tif (isStrOrStrListRecord(evts) && target) {\n\t\t// 不用addEventListener是它不方便reset\n\t\tObject.keys(evts)\n\t\t\t.filter((k: string): k is XhrEvents => events.includes(k as XhrEvents))\n\t\t\t.forEach((k: XhrEvents) => ((target as XhrEventsObj)[k] = evts[k]));\n\t}\n}\n\nfunction jsonp(opts: JsonpOptions): void {\n\tlet {\n\t\turl,\n\t\t/* tslint:disable */\n\t\tcache = false,\n\t\tcrossorigin,\n\t\tcallbackName,\n\t\tsuccess,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tconst hasOriginalCb = callbackName && isFn((window as any)[callbackName]);\n\tif (isNoEmptyStr(callbackName) && !hasOriginalCb) {\n\t\tthrow new Error(`${callbackName} is not a function.`);\n\t}\n\n\tconst hasSuccessCb = isFn(success),\n\t\thasErrorCb = isFn(error),\n\t\thasCompleteCb = isFn(complete),\n\t\t// hasOriginalCb为true的话, callbackName肯定不为空, 前面已经判断过了, 这里把空值去除\n\t\toriginalCb = hasOriginalCb ? (window as any)[callbackName!] : undefined;\n\n\tif (!hasSuccessCb && !hasCompleteCb && !hasOriginalCb) {\n\t\tthrow new Error('Must set a success callback or complete callback.');\n\t}\n\tif (!isNoEmptyStr(url)) {\n\t\tthrow new TypeError(`url expected a non empty string, but received ${JSON.stringify(url)}.`);\n\t}\n\n\tconst hasCustomCbName = isNoEmptyStr(callbackName),\n\t\t// hasCustomCbName为true的话, callbackName肯定为非空字符串, 这里去掉空值\n\t\tcbName = hasCustomCbName ? callbackName! : `jsonp${++jsonpId}`,\n\t\tscript = document.createElement('script');\n\n\tif (url.split('?').length < 3) {\n\t\t// 没有占位符的话默认callback\n\t\tconst qs = `callback=${encodeURIComponent(cbName)}`;\n\t\turl = ~url.indexOf('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t} else {\n\t\turl = url.replace(/\\?(.+)=\\?/, `?$1=${encodeURIComponent(cbName)}`);\n\t}\n\t!cache && (url += `&_=${++cacheRand}`);\n\n\tconst w = window as any;\n\tif (!w[cbName] || !w[cbName].hasHook) {\n\t\tw[cbName] = function (...args: Array<any>): void {\n\t\t\t// 放前面, 防止后面的callback抛异常导致删不掉\n\t\t\tif (!hasCustomCbName) {\n\t\t\t\tdelete w[cbName];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (hasOriginalCb) {\n\t\t\t\t\toriginalCb(...args);\n\t\t\t\t} else if (hasSuccessCb) {\n\t\t\t\t\t// 这里hasSuccessCb已经是类型保护isFn的结果了, 但是需要直接调用isFn\n\t\t\t\t\t// 才能获得类型保护, 为了减少函数调用, 就暂存了类型保护的结果为hasSuccessCb\n\t\t\t\t\t// 所以这里success也应当是不为空的, 去掉空值, 但是是用!去除还是用as\n\t\t\t\t\t// 应该是都可以, 但是这里来讲应该是!好一点, 因为这里success用as那就是Callble,\n\t\t\t\t\t// 用!那就是JsonpOptions中定义的类型, Callble更关心success是否可以作为函数调用,\n\t\t\t\t\t// 而JsonpOptions中的定义更关心具体参数的类型和个数, 这里我们更关心参数类型,\n\t\t\t\t\t// 所以用!去除空值\n\t\t\t\t\tsuccess!(...args);\n\t\t\t\t}\n\t\t\t\thasCompleteCb && complete!('success');\n\t\t\t\t// 同样, hasOriginalCb为true则callbackName不可能空, 去除空值\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t} catch (e) {\n\t\t\t\t// 个人觉得应该crash掉让用户修复异常而不是继续执行complete\n\t\t\t\t// 所以这里只是为了还原window上原有的函数而不是为了吞掉异常\n\t\t\t\thasOriginalCb && (w[callbackName!] = originalCb);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\tw[cbName].hasHook = true;\n\t}\n\n\tscript.onerror = function (e: string | Event): void {\n\t\tdocument.body.removeChild(script);\n\t\tif (!hasCustomCbName) {\n\t\t\tdelete w[cbName];\n\t\t}\n\t\t// 都没有的话就继续抛出异常, 方便异常监控系统捕获\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`Load script ${url} failed.`);\n\t\t}\n\t\thasErrorCb && error!(new Error(`Load script ${url} failed.`), e);\n\t\thasCompleteCb && complete!('error');\n\t};\n\n\tscript.onload = (): ReturnType<typeof setTimeout> =>\n\t\tsetTimeout(() => document.body.removeChild(script), 3000);\n\n\tcrossorigin && (script.crossOrigin = crossorigin);\n\tscript.src = url;\n\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\t// 允许拦截掉不发送请求\n\t\t\tconst rst = beforeSend!(url, opts);\n\t\t\trst !== false && document.body.appendChild(script);\n\t\t});\n\t} else {\n\t\tdocument.body.appendChild(script);\n\t}\n}\n\nfunction getResponse(xhr: CustomXMLHttpRequest, key: ResponseCategory): any {\n\t// 在有responseType的情况下, 访问responseXML, responseText等都有可能抛出异常\n\ttry {\n\t\treturn xhr[key];\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\nfunction ajax(opts: AjaxOptions): Abortable {\n\tlet {\n\t\turl = lc.href,\n\t\tmethod = 'GET' as HTTPMethod,\n\t\tcontentType: reqCtype,\n\t\tdataType: acceptType = 'json',\n\t\t/* tslint:disable */\n\t\tprocessData = true,\n\t\tdata: reqRawData,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\trecoverableError,\n\t\tunrecoverableError,\n\t\theaders = {},\n\t\tmimeType,\n\t\tresponseType = '' as XMLHttpRequestResponseType,\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\ttimeout = 0,\n\t\tontimeout,\n\t\tevents,\n\t\tuploadEvents,\n\t\twithCredentials = false,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t\t/* tslint:enable */\n\t} = opts;\n\n\tmethod = method.toUpperCase().trim() as HTTPMethod;\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isNoEmptyStr(reqCtype)) {\n\t\tMIME[reqCtype as PredefinedContentType] && (reqCtype = MIME[reqCtype as PredefinedContentType]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\tmaybeProtocol = /^([\\w-]+:)\\/\\//.exec(url),\n\t\threfProtocol = /^(https?):\\/\\//.exec(lc.href),\n\t\tprotocol = maybeProtocol ? maybeProtocol[1] : hrefProtocol ? hrefProtocol[1] : null,\n\t\txhr = xhrFactory(),\n\t\thasCompleteCb = isFn(complete),\n\t\thasRecoverableErrorCb = isFn(recoverableError),\n\t\thasUnrecoverableErrorCb = isFn(unrecoverableError),\n\t\thasSuccessCb = isFn(success);\n\n\tlet reqData: any,\n\t\terrCalled = false,\n\t\tcompleteCalled = false;\n\t// 这里不用捕获异常去重置xhr是因为xhr还没激活\n\t({url, data: reqData} = slz({data: reqRawData, method, processData, contentType: reqCtype, url, cache}));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, true, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isNoEmptyStr(reqData)) {\n\t\t// 注意这里破坏了默认post是简单请求的行为\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isNoEmptyStr(acceptType)) {\n\t\t(MIME as any)[acceptType] && (acceptType = MIME[acceptType as keyof MIMEType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\n\tif (isStrOrStrListRecord(headers)) {\n\t\tsetHeaders(xhr, headers);\n\t}\n\n\tisNoEmptyStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\twithCredentials && (xhr.withCredentials = withCredentials);\n\tresponseType && (xhr.responseType = responseType);\n\ttimeout && (xhr.timeout = timeout);\n\tif (isFn(ontimeout)) {\n\t\txhr.ontimeout = function (e: ProgressEvent): void {\n\t\t\tontimeout!(e);\n\t\t\thasCompleteCb && complete!(this, 'timeout');\n\t\t};\n\t} else if (timeout && !isFn(xhr.ontimeout)) {\n\t\txhr.ontimeout = function (): void {\n\t\t\tif (hasCompleteCb) {\n\t\t\t\tcomplete!(this, 'timeout');\n\t\t\t} else {\n\t\t\t\t// 如果没监听ontimeout但是设置了timeout, window.onerror不会捕获这个错误, 所以手动抛个\n\t\t\t\tthrow new Error(`Request ${(this as CustomXMLHttpRequest).requestURL} timeout.`);\n\t\t\t}\n\t\t};\n\t}\n\n\t// loadend无论同步还是异步请求, 无论前面的事件是否抛异常, 它都会执行\n\tif (isFn(xhr.onloadend)) {\n\t\tconst originalLoadend = xhr.onloadend;\n\t\txhr.onloadend = function (e: ProgressEvent): void {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t\toriginalLoadend.call(this, e);\n\t\t};\n\t} else {\n\t\txhr.onloadend = function (): void {\n\t\t\tresetXhr(this as CustomXMLHttpRequest);\n\t\t};\n\t}\n\t// 覆盖掉用户自定义onreadystatechange\n\txhr.onreadystatechange = function (e: Event): void {\n\t\tif (this.readyState === 4) {\n\t\t\tconst resCtype = this.getResponseHeader('Content-Type');\n\t\t\t// 这里也不用捕获异常, 因为xhr.onloadend会在之后帮我们回收xhr\n\t\t\tconst resData = dslz({\n\t\t\t\tdata:\n\t\t\t\t\tgetResponse(xhr, 'responseXML') ||\n\t\t\t\t\tgetResponse(xhr, 'response') ||\n\t\t\t\t\tgetResponse(xhr, 'responseText'),\n\t\t\t\tcontentType: resCtype,\n\t\t\t\tacceptType\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\t(this.status >= 200 && this.status < 300) ||\n\t\t\t\tthis.status === 304 ||\n\t\t\t\t(this.status === 0 && protocol === 'file:')\n\t\t\t) {\n\t\t\t\t// 异常直接抛\n\t\t\t\thasSuccessCb && success!(resData, this, e);\n\t\t\t\thasCompleteCb && complete!(this, 'success');\n\t\t\t} else if (this.status !== 0) {\n\t\t\t\t// 这类错误xhr.onerror和window.onerror都不捕获所以手动抛一个\n\t\t\t\tif (!hasRecoverableErrorCb && !hasCompleteCb) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Remote server error. Request URL: ${\n\t\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t\t}, Method: ${method}, Status code: ${this.status}, message: ${this.statusText}, response: ${\n\t\t\t\t\t\t\tthis.responseText\n\t\t\t\t\t\t}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// 理论上来讲好像没必要再注册xhr.onerror了, 因为如果有error那status必然为0\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\t\t\t\t// 但是不加个心里不踏实...总感觉会不会有浏览器没按规范实现\n\t\t\t\t// 不过知名的库页都没监听onerror, 那说明应该是都按规范实现了的\n\t\t\t\t// 但是我要加!!!\n\t\t\t\tif (hasRecoverableErrorCb) {\n\t\t\t\t\terrCalled = true;\n\t\t\t\t\trecoverableError!(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Remote server error. Request URL: ${\n\t\t\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t\t\t}, Method: ${method}, Status code: ${this.status}, message: ${this.statusText}, response: ${\n\t\t\t\t\t\t\t\tthis.responseText\n\t\t\t\t\t\t\t}.`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tresData,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\te\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (hasCompleteCb) {\n\t\t\t\t\tcompleteCalled = true;\n\t\t\t\t\tcomplete!(this, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 覆盖\n\txhr.onerror = function (e: ProgressEvent): void {\n\t\t// 跨域错误会在这里捕获, 但是window.onerror不捕获, 所以也手动抛一个\n\t\tif (!hasUnrecoverableErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(\n\t\t\t\t`An error occurred, maybe crossorigin error. Request URL: ${\n\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t}, Method: ${method}, Status code: ${this.status}.`\n\t\t\t);\n\t\t}\n\t\tif (!errCalled && hasUnrecoverableErrorCb) {\n\t\t\tunrecoverableError!(\n\t\t\t\tnew Error(\n\t\t\t\t\t`Network error or browser restricted. Request URL: ${\n\t\t\t\t\t\t(this as CustomXMLHttpRequest).requestURL\n\t\t\t\t\t}, Method: ${method}, Status code: ${this.status}`\n\t\t\t\t),\n\t\t\t\tthis,\n\t\t\t\te\n\t\t\t);\n\t\t}\n\t\tif (!completeCalled && hasCompleteCb) {\n\t\t\tcomplete!(this, 'error');\n\t\t}\n\t};\n\n\t// 哎...都异步吧\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\tlet rst;\n\t\t\ttry {\n\t\t\t\t// TODO 这里虽然传递了options, 设计上讲应当是允许修改options并影响后续行为\n\t\t\t\t// 但是实际上在beforeSend里面修改options并不会产生什么影响, 因为根据options进行\n\t\t\t\t// 配置的操作在前面就已经完成了\n\t\t\t\trst = beforeSend!(xhr, opts);\n\t\t\t} catch (e) {\n\t\t\t\t// 恶心之处就在于每个用户定义的callback都可能触发异常, 然而我还要回收xhr\n\t\t\t\tresetXhr(xhr);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tif (rst !== false) {\n\t\t\t\txhr.send(reqData || null);\n\t\t\t} else {\n\t\t\t\tresetXhr(xhr);\n\t\t\t}\n\t\t});\n\t} else {\n\t\txhr.send(reqData || null);\n\t}\n\t// 不暴露xhr\n\treturn {\n\t\tabort(): void {\n\t\t\txhr.abort();\n\t\t}\n\t};\n}\n\nexport function config({pool = false, serialize, deserialize}: ConfigOptions = {}): void {\n\tif (pool) {\n\t\txhrPool.length = 0;\n\t\tlet poolSize = typeof pool === 'number' ? pool : 5;\n\t\tif (poolSize < 0) {\n\t\t\tthrow new Error('pool size must >= 0');\n\t\t}\n\t\twhile (poolSize--) {\n\t\t\txhrPool.push(createXhr());\n\t\t}\n\t}\n\tisFn(serialize) && (globalSerialize = serialize);\n\tisFn(deserialize) && (globalDeserialize = deserialize);\n}\n\nexport {ajax, jsonp};\n\nexport function get(url: string, opts: NoBodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function head(url: string, opts: NoBodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tmethod: 'HEAD'\n\t});\n}\n\nexport function post(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n}\n\nexport function put(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n}\n\nexport function del(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n}\n\nexport function patch(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PATCH'\n\t});\n}\n\nexport function options(url: string, data: any, opts: BodyMethodOptions): Abortable {\n\treturn ajax({\n\t\t...opts,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'OPTIONS'\n\t});\n}\n"],"names":["createXhr","xhr","XMLHttpRequest","Object","defineProperty","value","writable","enumerable","resetXhr","_active","timeout","requestURL","e","events","forEach","v","upload","xhrFactory","i","len","xhrPool","length","querystring","obj","isStrOrStrListRecord","keys","map","k","Array","isArray","encodeURIComponent","join","JSON","stringify","setHeaders","headers","setRequestHeader","setEvents","target","evts","filter","includes","jsonp","opts","url","cache","crossorigin","callbackName","success","beforeSend","complete","error","hasOriginalCb","isFn","window","isNoEmptyStr","Error","hasSuccessCb","hasErrorCb","hasCompleteCb","originalCb","TypeError","hasCustomCbName","cbName","jsonpId","script","document","createElement","split","qs","indexOf","replace","cacheRand","w","hasHook","args","onerror","body","removeChild","onload","setTimeout","crossOrigin","src","rst","appendChild","getResponse","key","ajax","lc","href","method","contentType","reqCtype","dataType","acceptType","processData","data","reqRawData","recoverableError","unrecoverableError","mimeType","responseType","username","password","ontimeout","uploadEvents","withCredentials","serialize","deserialize","toUpperCase","trim","MIME","slz","globalSerialize","defaultSerialize","dslz","globalDeserialize","defaultDeserialize","maybeProtocol","exec","hrefProtocol","protocol","hasRecoverableErrorCb","hasUnrecoverableErrorCb","reqData","errCalled","completeCalled","open","json","overrideMimeType","onloadend","originalLoadend","call","onreadystatechange","readyState","resCtype","getResponseHeader","resData","status","statusText","responseText","send","abort","fn","isJSON","cType","test","isForm","o","prototype","toString","location","ArrayBufferView","getPrototypeOf","Uint8Array","constructor","form","html","xml","text","Date","now","Document","Blob","FormData","ArrayBuffer","resultData","parse","console","pool","poolSize","push"],"mappings":"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"}