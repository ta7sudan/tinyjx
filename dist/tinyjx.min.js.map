{"version":3,"file":"tinyjx.min.js","sources":["tinyjx.js"],"sourcesContent":["/* global DEBUG */\nconst isFn = fn => typeof fn === 'function';\n\nconst isJSON = cType => /application\\/json/i.test(cType);\n\nconst isForm = cType => /application\\/x-www-form-urlencoded/i.test(cType);\n\nconst isStr = v => v && typeof v === 'string';\n\nconst isObj = o => Object.prototype.toString.call(o) === '[object Object]';\n\nconst xhrPool = [],\n\tArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor,\n\tMIME = {\n\t\tjson: 'application/json',\n\t\tform: 'application/x-www-form-urlencoded',\n\t\thtml: 'text/html',\n\t\txml: 'application/xml',\n\t\ttext: 'text/plain'\n\t},\n\tevents = [\n\t\t'onloadstart',\n\t\t'onprogress',\n\t\t'onabort',\n\t\t'onerror',\n\t\t'onload',\n\t\t'ontimeout',\n\t\t'onloadend',\n\t\t'onreadystatechange'\n\t];\n\nlet jsonpId = Date.now(),\n\tcacheRand = Date.now() + 5,\n\tglobalSerialize = null,\n\tglobalDeserialize = null;\n\nif (DEBUG) {\n\tvar xhrId = 0;\n}\n\nfunction createXhr() {\n\tconst xhr = new XMLHttpRequest();\n\tObject.defineProperty(xhr, '_active', {\n\t\tvalue: false,\n\t\twritable: true,\n\t\tenumerable: false\n\t});\n\tif (DEBUG) {\n\t\tObject.defineProperty(xhr, '_id', {\n\t\t\tvalue: ++xhrId,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\treturn xhr;\n}\n\nfunction resetXhr(xhr) {\n\t// responseType, withCredentials以及header相关的会在open后重置\n\txhr._active = false;\n\t// 可能是同步请求那就不能设置timeout\n\ttry {\n\t\txhr.timeout = 0;\n\t\txhr.requestURL = '';\n\t\t/* eslint-disable-next-line */\n\t} catch (e) { }\n\tevents.forEach(v => (xhr[v] = null));\n\txhr.upload && events.forEach(v => (xhr.upload[v] = null));\n}\n\nfunction xhrFactory() {\n\tfor (let i = 0, len = xhrPool.length; i < len; ++i) {\n\t\tif (!xhrPool[i]._active) {\n\t\t\treturn xhrPool[i];\n\t\t}\n\t}\n\treturn createXhr();\n}\n\nfunction querystring(obj) {\n\tif (isObj(obj)) {\n\t\treturn Object.keys(obj)\n\t\t\t.map(\n\t\t\t\tk =>\n\t\t\t\t\tArray.isArray(obj[k])\n\t\t\t\t\t\t? obj[k]\n\t\t\t\t\t\t\t.map(v => `${encodeURIComponent(k)}=${encodeURIComponent(JSON.stringify(v))}`)\n\t\t\t\t\t\t\t.join('&')\n\t\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(JSON.stringify(obj[k]))}`\n\t\t\t)\n\t\t\t.join('&');\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n}\n\nfunction defaultSerialize({ data, method, contentType = MIME.json, url, cache }) {\n\tif (!cache) {\n\t\turl += ~url.indexOf('?') ? `&_=${++cacheRand}` : `?_=${++cacheRand}`;\n\t}\n\tif (method === 'GET' || method === 'HEAD') {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (\n\t\tdata instanceof Document ||\n\t\t// URLSearchParams和ReadableStream暂时不考虑支持了, 浏览器版本要求比较高\n\t\t// data instanceof URLSearchParams ||\n\t\t// data instanceof ReadableStream ||\n\t\tdata instanceof Blob ||\n\t\tdata instanceof FormData ||\n\t\tdata instanceof ArrayBuffer ||\n\t\tdata instanceof ArrayBufferView ||\n\t\ttypeof data === 'string'\n\t) {\n\t\treturn {\n\t\t\turl,\n\t\t\tdata\n\t\t};\n\t}\n\tif (isJSON(contentType)) {\n\t\tdata = JSON.stringify(data);\n\t} else if (isForm(contentType)) {\n\t\tdata = querystring(data);\n\t} else {\n\t\tthrow new TypeError(\n\t\t\t'Unknown data type, you can provide a custom serialize function in options to override the default.'\n\t\t);\n\t}\n\treturn {\n\t\turl,\n\t\tdata\n\t};\n}\n\nfunction defaultDeserialize({ data, contentType, acceptType }) {\n\tlet rst = null;\n\tif (isStr(data) && (isJSON(contentType) || isJSON(acceptType))) {\n\t\ttry {\n\t\t\trst = JSON.parse(data);\n\t\t} catch (e) {\n\t\t\tconsole.error('Invalid json string');\n\t\t\trst = data;\n\t\t}\n\t} else {\n\t\trst = data;\n\t}\n\treturn rst;\n}\n\nfunction setHeaders(xhr, headers) {\n\tif (isObj(headers)) {\n\t\tObject.keys(headers).forEach(k => xhr.setRequestHeader(k, headers[k]));\n\t}\n}\n\nfunction isolateTryCatch({ xhr, reqData, acceptType, dslz, success, error, complete }) {\n\t// 这一坨有点恶心...考虑下怎么优化\n\t// 这里是为了捕获callback的异常, 以便最终可以reset\n\ttry {\n\t\tlet hasErrorCb = isFn(error),\n\t\t\thasCompleteCb = isFn(complete),\n\t\t\thasSuccessCb = isFn(success),\n\t\t\terrOccurred = false,\n\t\t\tresData = null;\n\t\t// 覆盖用户自定义\n\t\txhr.onreadystatechange = function (e) {\n\t\t\tif (this.readyState === 4) {\n\t\t\t\tif (\n\t\t\t\t\t!((this.status >= 200 && this.status < 300) || this.status == 304) &&\n\t\t\t\t\tthis.status !== 0\n\t\t\t\t) {\n\t\t\t\t\t// 404之类的错误会在这里捕获, try-catch不能捕获\n\t\t\t\t\terrOccurred = true;\n\t\t\t\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Remote server error. Request URL: ${this.requestURL}, Status code: ${this.status}, message: ${this.statusText}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// 异常不管直接抛\n\t\t\t\t\thasErrorCb && error(new Error(`Remote server error. Request URL: ${this.requestURL}, Status code: ${this.status}, message: ${this.statusText}.`), xhr, e);\n\t\t\t\t\thasCompleteCb && complete(xhr, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// 同步不触发onerror, 这里是为了捕获网络异常h和跨域异常\n\t\ttry {\n\t\t\txhr.send(reqData || null);\n\t\t} catch (e) {\n\t\t\terrOccurred = true;\n\t\t\t// 没有监听异常事件也不要吞掉异常, 跨域错误会在这里被捕获\n\t\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\t// 异常不管直接抛\n\t\t\thasErrorCb && error(e, xhr, null);\n\t\t\thasCompleteCb && complete(xhr, 'error');\n\t\t}\n\t\tif (!errOccurred) {\n\t\t\tconst resCtype = xhr.getResponseHeader('Content-Type');\n\t\t\t// 这里也不捕获, 因为最外面已经捕获了\n\t\t\tresData = dslz({\n\t\t\t\tdata: getResponse(xhr, 'responseXML') || getResponse(xhr, 'response') || getResponse(xhr, 'responseText'),\n\t\t\t\tcontentType: resCtype,\n\t\t\t\tacceptType\n\t\t\t});\n\t\t\t// 异常直接抛, success不能在try中, 可能是success导致的异常进而使得控制流走向error\n\t\t\thasSuccessCb && success(resData, xhr, null);\n\t\t\thasCompleteCb && complete(xhr, 'success');\n\t\t}\n\t\t// loadend会在请求完成之后同步代码之前触发, 导致没办法依赖loadend来reset, 必须等到所有callback使用完xhr之后\n\t\t// xhr才算idle, 但是如果callback中异步引用了xhr也依然会有问题, 因为目的是希望所有callback执行完之后\n\t\t// 就不再使用xhr了, 避免xhr在下个请求中产生竞争, 除非不向callback暴露xhr, 但这也不现实\n\t\tresetXhr(xhr);\n\t\treturn resData;\n\t} catch (err) {\n\t\tresetXhr(xhr);\n\t\tthrow err;\n\t}\n}\n\nfunction setEvents(target, evts) {\n\tif (isObj(evts) && target) {\n\t\t// 不用addEventListener是它不方便reset\n\t\tObject.keys(evts)\n\t\t\t.filter(k => events.includes(k))\n\t\t\t.forEach(k => target[k] = evts[k]);\n\t}\n}\n\nfunction jsonp(options) {\n\tlet {\n\t\turl,\n\t\tcache = false,\n\t\tcrossorigin,\n\t\tcallbackName,\n\t\tsuccess,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\terror\n\t} = options;\n\n\tconst hasOriginalCb = isFn(window[callbackName]);\n\tif (isStr(callbackName) && !hasOriginalCb) {\n\t\tthrow new Error(`${callbackName} is not a function.`);\n\t}\n\n\tconst hasSuccessCb = isFn(success),\n\t\thasErrorCb = isFn(error),\n\t\thasCompleteCb = isFn(complete),\n\t\toriginalCb = hasOriginalCb ? window[callbackName] : undefined;\n\n\tif (!hasSuccessCb && !hasCompleteCb & !hasOriginalCb) {\n\t\tthrow new Error('Must set a success callback or complete callback.');\n\t}\n\tif (!isStr(url)) {\n\t\tthrow new TypeError(`url expected a non empty string, but received ${JSON.stringify(url)}.`);\n\t}\n\n\tconst hasCustomCbName = isStr(callbackName),\n\t\tcbName = hasCustomCbName ? callbackName : `jsonp${++jsonpId}`,\n\t\tscript = document.createElement('script');\n\n\tif (url.split('?').length < 3) {\n\t\t// 没有占位符的话默认callback\n\t\tconst qs = `callback=${encodeURIComponent(cbName)}`;\n\t\turl = ~url.indexOf('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t} else {\n\t\turl = url.replace(/\\?(.+)=\\?/, `?$1=${encodeURIComponent(cbName)}`);\n\t}\n\t!cache && (url += `&_=${++cacheRand}`);\n\n\tif (!window[cbName] || !window[cbName].hasHook) {\n\t\twindow[cbName] = function (...args) {\n\t\t\t// 放前面, 防止后面的callback抛异常导致删不掉\n\t\t\tif (!hasCustomCbName) {\n\t\t\t\tdelete window[cbName];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (hasOriginalCb) {\n\t\t\t\t\toriginalCb(...args);\n\t\t\t\t} else if (hasSuccessCb) {\n\t\t\t\t\tsuccess(...args);\n\t\t\t\t}\n\t\t\t\thasCompleteCb && complete('success');\n\t\t\t\thasOriginalCb && (window[callbackName] = originalCb);\n\t\t\t} catch (e) {\n\t\t\t\t// 个人觉得应该crash掉让用户修复异常而不是继续执行complete\n\t\t\t\t// 所以这里只是为了还原window上原有的函数而不是为了吞掉异常\n\t\t\t\thasOriginalCb && (window[callbackName] = originalCb);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\twindow[cbName].hasHook = true;\n\t}\n\n\tscript.onerror = function (e) {\n\t\tdocument.body.removeChild(script);\n\t\tif (!hasCustomCbName) {\n\t\t\tdelete window[cbName];\n\t\t}\n\t\t// 都没有的话就继续抛出异常, 方便异常监控系统捕获\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`Load script ${url} failed.`);\n\t\t}\n\t\thasErrorCb && error(new Error(`Load script ${url} failed.`), e);\n\t\thasCompleteCb && complete('error');\n\t};\n\n\tscript.onload = () => setTimeout(() => document.body.removeChild(script), 3000);\n\n\tcrossorigin && (script.crossOrigin = crossorigin);\n\tscript.src = url;\n\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\t// 允许拦截掉不发送请求\n\t\t\tconst rst = beforeSend(url, options);\n\t\t\trst !== false && document.body.appendChild(script);\n\t\t});\n\t} else {\n\t\tdocument.body.appendChild(script);\n\t}\n}\n\nfunction getResponse(xhr, key) {\n\t// 在有responseType的情况下, 访问responseXML, responseText等都有可能抛出异常\n\ttry {\n\t\treturn xhr[key];\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\nfunction ajax(options) {\n\tlet {\n\t\turl = location.href,\n\t\tmethod = 'GET',\n\t\tcontentType: reqCtype,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\tdata: reqRawData,\n\t\tdataType: acceptType = 'json',\n\t\terror,\n\t\theaders,\n\t\tmimeType,\n\t\tresponseType = '',\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\ttimeout = 0,\n\t\tontimeout,\n\t\tevents,\n\t\tuploadEvents,\n\t\twithCredentials = false,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t} = options;\n\n\tmethod = method.toUpperCase().trim();\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isStr(reqCtype)) {\n\t\tMIME[reqCtype] && (reqCtype = MIME[reqCtype]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\tprotocol = /^([\\w-]+:)\\/\\//.exec(url)[1],\n\t\txhr = xhrFactory(),\n\t\thasCompleteCb = isFn(complete),\n\t\thasErrorCb = isFn(error),\n\t\thasSuccessCb = isFn(success);\n\n\tlet reqData,\n\t\terrCalled = false,\n\t\tcompleteCalled = false;\n\t// 这里不用捕获异常去重置xhr是因为xhr还没激活\n\t({ url, data: reqData } = slz({ data: reqRawData, method, contentType: reqCtype, url, cache }));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, true, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isStr(reqData)) {\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isStr(acceptType)) {\n\t\tMIME[acceptType] && (acceptType = MIME[acceptType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\tsetHeaders(xhr, headers);\n\n\tisStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\twithCredentials && (xhr.withCredentials = withCredentials);\n\tresponseType && (xhr.responseType = responseType);\n\ttimeout && (xhr.timeout = timeout);\n\tif (isFn(ontimeout)) {\n\t\txhr.ontimeout = function (e) {\n\t\t\tontimeout(e);\n\t\t\thasCompleteCb && complete(this, 'timeout');\n\t\t};\n\t} else if (timeout && !isFn(xhr.ontimeout)) {\n\t\txhr.ontimeout = function () {\n\t\t\tif (hasCompleteCb) {\n\t\t\t\tcomplete(this, 'timeout');\n\t\t\t} else {\n\t\t\t\t// 如果没监听ontimeout但是设置了timeout, window.onerror不会捕获这个错误, 所以手动抛个\n\t\t\t\tthrow new Error(`Request ${this.requestURL} timeout.`);\n\t\t\t}\n\t\t};\n\t}\n\n\t// loadend无论同步还是异步请求, 无论前面的事件是否抛异常, 它都会执行\n\tif (isFn(xhr.onloadend)) {\n\t\tconst originalLoadend = xhr.onloadend;\n\t\txhr.onloadend = function (e) {\n\t\t\tresetXhr(this);\n\t\t\toriginalLoadend.call(this, e);\n\t\t};\n\t} else {\n\t\txhr.onloadend = function () {\n\t\t\tresetXhr(this);\n\t\t};\n\t}\n\t// 覆盖掉用户自定义onreadystatechange\n\txhr.onreadystatechange = function (e) {\n\t\tif (this.readyState === 4) {\n\t\t\tif (\n\t\t\t\t(this.status >= 200 && this.status < 300) ||\n\t\t\t\tthis.status == 304 ||\n\t\t\t\t(this.status == 0 && protocol == 'file:')\n\t\t\t) {\n\t\t\t\tconst resCtype = this.getResponseHeader('Content-Type');\n\t\t\t\t// 这里也不用捕获异常, 因为xhr.onloadend会在之后帮我们回收xhr\n\t\t\t\tconst resData = dslz({\n\t\t\t\t\tdata: getResponse(xhr, 'responseXML') || getResponse(xhr, 'response') || getResponse(xhr, 'responseText'),\n\t\t\t\t\tcontentType: resCtype,\n\t\t\t\t\tacceptType\n\t\t\t\t});\n\t\t\t\t// 异常直接抛\n\t\t\t\thasSuccessCb && success(resData, this, e);\n\t\t\t\thasCompleteCb && complete(this, 'success');\n\t\t\t} else if (this.status !== 0) {\n\t\t\t\t// 这类错误xhr.onerror和window.onerror都不捕获所以手动抛一个\n\t\t\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Remote server error. Request URL: ${this.requestURL}, Status code: ${this.status}, message: ${this.statusText}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// 理论上来讲好像没必要再注册xhr.onerror了, 因为如果有error那status必然为0\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\t\t\t\t// 但是不加个心里不踏实...总感觉会不会有浏览器没按规范实现\n\t\t\t\t// 不过知名的库页都没监听onerror, 那说明应该是都按规范实现了的\n\t\t\t\t// 但是我要加!!!\n\t\t\t\tif (hasErrorCb) {\n\t\t\t\t\terrCalled = true;\n\t\t\t\t\terror(new Error(`Remote server error. Request URL: ${this.requestURL}, Status code ${this.status}`), this, e);\n\t\t\t\t}\n\t\t\t\tif (hasCompleteCb) {\n\t\t\t\t\tcompleteCalled = true;\n\t\t\t\t\tcomplete(this, 'error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 覆盖\n\txhr.onerror = function (e) {\n\t\t// 跨域错误会在这里捕获, 但是window.onerror不捕获, 所以也手动抛一个\n\t\tif (!hasErrorCb && !hasCompleteCb) {\n\t\t\tthrow new Error(`An error occurred, maybe crossorigin error. Request URL: ${this.requestURL}, Status code: ${this.status}.`);\n\t\t}\n\t\tif (!errCalled && hasErrorCb) {\n\t\t\terror(new Error(`Network error or browser restricted. Request URL: ${this.requestURL}, Status code: ${this.status}`), this, e);\n\t\t}\n\t\tif (!completeCalled && hasCompleteCb) {\n\t\t\tcomplete(this, 'error');\n\t\t}\n\t};\n\n\t// 哎...都异步吧\n\tif (isFn(beforeSend)) {\n\t\tsetTimeout(() => {\n\t\t\tlet rst;\n\t\t\ttry {\n\t\t\t\trst = beforeSend(xhr, options);\n\t\t\t} catch (e) {\n\t\t\t\t// 恶心之处就在于每个用户定义的callback都可能触发异常, 然而我还要回收xhr\n\t\t\t\tresetXhr(xhr);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tif (rst !== false) {\n\t\t\t\txhr.send(reqData || null);\n\t\t\t} else {\n\t\t\t\tresetXhr(xhr);\n\t\t\t}\n\t\t});\n\t} else {\n\t\txhr.send(reqData || null);\n\t}\n\t// 不暴露xhr\n\treturn {\n\t\tabort() {\n\t\t\txhr.abort();\n\t\t}\n\t};\n}\n\nfunction ajaxSync(options) {\n\t// 同步请求忽略timeout, responseType, withCredentials, 否则报错\n\t// 同步请求的callback都同步调用, 支持callback只是为了API保持一致\n\tlet {\n\t\turl = location.href,\n\t\tmethod = 'GET',\n\t\tcontentType: reqCtype,\n\t\tbeforeSend,\n\t\tcomplete,\n\t\tdata: reqRawData,\n\t\tdataType: acceptType = 'json',\n\t\terror,\n\t\theaders,\n\t\tmimeType,\n\t\tusername,\n\t\tpassword,\n\t\tsuccess,\n\t\tevents,\n\t\tuploadEvents,\n\t\tcache = true,\n\t\tserialize,\n\t\tdeserialize\n\t} = options;\n\n\tmethod = method.toUpperCase().trim();\n\t// IE是什么...\n\t// xhr不支持CONNECT, TRACE, TRACK方法\n\tif (!['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'].includes(method)) {\n\t\tthrow new Error(`Invalid HTTP method: ${method}`);\n\t}\n\t// 允许所有callback都没有\n\n\t// 准备数据\n\tif (isStr(reqCtype)) {\n\t\tMIME[reqCtype] && (reqCtype = MIME[reqCtype]);\n\t} else if (reqCtype) {\n\t\tthrow new TypeError(\n\t\t\t'contentType could be \"json\", \"form\", \"html\", \"xml\", \"text\" or other custom string.'\n\t\t);\n\t}\n\n\tconst slz = isFn(serialize)\n\t\t\t? serialize\n\t\t\t: isFn(globalSerialize)\n\t\t\t\t? globalSerialize\n\t\t\t\t: defaultSerialize,\n\t\tdslz = isFn(deserialize)\n\t\t\t? deserialize\n\t\t\t: isFn(globalDeserialize)\n\t\t\t\t? globalDeserialize\n\t\t\t\t: defaultDeserialize,\n\t\txhr = xhrFactory();\n\n\tlet reqData;\n\t({ url, data: reqData } = slz({ data: reqRawData, method, contentType: reqCtype, url, cache }));\n\n\t// 初始化xhr\n\txhr._active = true;\n\txhr.open(method, url, false, username, password);\n\t!xhr.requestURL && (xhr.requestURL = url);\n\n\t// 设置必要的头部\n\tif (reqCtype) {\n\t\txhr.setRequestHeader('Content-Type', reqCtype);\n\t} else if (isStr(reqData)) {\n\t\t// 不在默认参数设json是为了让FormData之类的能够由浏览器自己设置\n\t\t// 这里只对字符串的body设置默认为json\n\t\txhr.setRequestHeader('Content-Type', MIME.json);\n\t}\n\tif (isStr(acceptType)) {\n\t\tMIME[acceptType] && (acceptType = MIME[acceptType]);\n\t\txhr.setRequestHeader('Accept', acceptType);\n\t}\n\tsetHeaders(xhr, headers);\n\n\tisStr(mimeType) && xhr.overrideMimeType(mimeType);\n\n\t// 主要是给progress等事件用, 但存在破坏封装的风险\n\tsetEvents(xhr, events);\n\tsetEvents(xhr.upload, uploadEvents);\n\n\tif (isFn(beforeSend)) {\n\t\tlet rst;\n\t\ttry {\n\t\t\trst = beforeSend(xhr, options);\n\t\t} catch (e) {\n\t\t\tresetXhr(xhr);\n\t\t\tthrow e;\n\t\t}\n\t\tif (rst !== false) {\n\t\t\treturn isolateTryCatch({ xhr, reqData, acceptType, dslz, success, error, complete });\n\t\t} else {\n\t\t\tresetXhr(xhr);\n\t\t}\n\t} else {\n\t\treturn isolateTryCatch({ xhr, reqData, acceptType, dslz, success, error, complete });\n\t}\n}\n\nexport function config({ pool = false, serialize, deserialize } = {}) {\n\tif (pool) {\n\t\txhrPool.length = 0;\n\t\tlet poolSize = typeof pool === 'number' ? pool : 5;\n\t\tif (poolSize < 0) {\n\t\t\tthrow new Error('pool size must >= 0');\n\t\t}\n\t\twhile (poolSize--) {\n\t\t\txhrPool.push(createXhr());\n\t\t}\n\t}\n\tisFn(serialize) && (globalSerialize = serialize);\n\tisFn(deserialize) && (globalDeserialize = deserialize);\n}\n\nexport { ajax, ajaxSync, jsonp };\n\nexport function get(url, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function head(url, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tmethod: 'HEAD'\n\t});\n}\n\nexport function post(url, data, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n}\n\nexport function put(url, data, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n}\n\nexport function del(url, data, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n}\n\nexport function patch(url, data, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PATCH'\n\t});\n}\n\nexport function options(url, data, options) {\n\treturn ajax({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'OPTIONS'\n\t});\n}\n"],"names":["isFn","fn","isJSON","cType","test","isForm","isStr","v","isObj","o","Object","prototype","toString","call","xhrPool","ArrayBufferView","getPrototypeOf","Uint8Array","constructor","MIME","json","form","html","xml","text","events","jsonpId","Date","now","cacheRand","globalSerialize","globalDeserialize","createXhr","xhr","XMLHttpRequest","defineProperty","value","writable","enumerable","resetXhr","_active","timeout","requestURL","e","forEach","upload","xhrFactory","i","len","length","defaultSerialize","obj","data","method","contentType","url","cache","indexOf","Document","Blob","FormData","ArrayBuffer","JSON","stringify","TypeError","keys","map","k","Array","isArray","encodeURIComponent","join","defaultDeserialize","acceptType","rst","parse","console","error","setHeaders","headers","setRequestHeader","isolateTryCatch","reqData","dslz","success","complete","hasErrorCb","hasCompleteCb","hasSuccessCb","errOccurred","resData","onreadystatechange","this","readyState","status","Error","statusText","send","resCtype","getResponseHeader","getResponse","err","setEvents","target","evts","filter","includes","key","ajax","options","location","href","reqCtype","beforeSend","reqRawData","dataType","mimeType","responseType","username","password","ontimeout","uploadEvents","withCredentials","serialize","deserialize","toUpperCase","trim","slz","protocol","exec","errCalled","completeCalled","open","overrideMimeType","onloadend","originalLoadend","onerror","setTimeout","abort","pool","poolSize","push","crossorigin","callbackName","hasOriginalCb","window","originalCb","undefined","hasCustomCbName","cbName","script","document","createElement","split","qs","replace","hasHook","body","removeChild","onload","crossOrigin","src","appendChild"],"mappings":"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"}